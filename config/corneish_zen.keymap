
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// MAC

#define mCHAR 0
#define mNR 1

#define mNAV 2
#define mNAV2 3

#define mPRG 4
#define mSPRG 5

#define mFUNC 6
#define mSFUNC 7

#define mSYM 8
#define mSSYM 9

#define mMOD 10
#define mSMOD 11			



// WINDOWS

#define wCHAR 12

#define wNAV 13
#define wNAV2 14

#define wNR 15

#define wSYM 16
#define wSSYM 17

#define wPRG 18
#define wSPRG 19

#define wFUNC 20
#define wSFUNC 21

#define wMOD 22
#define wSMOD 23

#define wZMOD 24
#define wFMOD 25
#define wALT 26


// BOTH

#define bCHAR 27
#define bNR 28
 



/ {
  
  	chosen {
    	zmk,matrix_transform = &default_transform;
    	//zmk,matrix_transform = &five_column_transform;
  	};


    macros {


		// --- Left and Right ---


        swleft: SwitchLeft {				
            label = "SwitchLeft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(LA(LC(TAB)))>		// zum ersten Desk
                ;
        };
		swright: SwitchRight {
            label = "SwitchRight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&kp LG(LA(LC(RIGHT)))> 	// einen rechts
                ;
        };



		// --- Windows Window Move ---
		 
		windowleft: windowleft {
            label = "windowleft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp LEFT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };

		windowright: windowright {
            label = "windowright";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp RIGHT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };

		 windowup: windowup {
            label = "windowup";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp UP>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };

		windowdown: windowdown {
            label = "windowdown";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp DOWN>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };	
    };

	behaviors {

    	skq: sticky_key_quick_release {
        	compatible = "zmk,behavior-sticky-key";
        	label = "STICKY_KEY_QUICK_RELEASE";
        	#binding-cells = <1>;
        	bindings = <&kp>;
        	release-after-ms = <5000>;
        	quick-release;
    	}; 
	};
};


&sl {
   	release-after-ms = <2000>;
};

&mt {
    tapping-term-ms = <160>;
};




// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------
//					 ~  MAC  ~
// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------


/ {
	keymap
	{	
		compatible = "zmk,keymap";
		

		// --------------------------------------
		// Layer 0 - mChar = 	  Buchstaben	
		// --------------------------------------
	
		mac_buchstaben
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp J 
				&kp D	 
				&kp U
				&kp A
				&kp X
				&kp P
				&kp H
				&kp L
				&kp M
				&kp W
				&kp BSPC
	
				&kp DEL
				&kp C
				&kp T
				&kp I
				&kp E
				&kp O
				&kp B
				&kp N
				&kp R
				&kp S
				&kp G
				&kp RET
	
				&kp LSHIFT
				&kp F
				&kp V
				&kp MINUS
				&kp Y
				&kp Q
				&kp Z
				&kp SEMI
				&kp LBKT
				&kp SQT
				&kp K
				&kp LSHIFT

				&sl mFUNC
				&kp SPACE
				&sl mNAV
				&sl mPRG
				&mDnr
				&sl mMOD
			>;
		};

	};		
};

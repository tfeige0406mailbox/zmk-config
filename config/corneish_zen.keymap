
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// MAC

#define mCHAR 0
#define mBCHAR 1
#define mNR 2

#define mSYM 3
#define mSSYM 4

#define mPFUNC 5
#define mSPFUNC 6

#define mPRG 7
#define mSPRG 8

#define mFUNC 9
#define mSFUNC 10

#define mMOD 11
#define mSMOD 12
#define mSSMOD 13

#define mNAV 14




// WINDOWS

#define wCHAR 15
#define wBCHAR 16
#define wNR 17


#define wSYM 18
#define wSSYM 19

#define wPFUNC 20
#define wSPFUNC 21

#define wPRG 22
#define wSPRG 23

#define wFUNC 24
#define wSFUNC 25

#define wMOD 26
#define wSMOD 27
#define wSSMOD 28

#define wNAV 29




/ {
  
  	chosen {
    	zmk,matrix_transform = &default_transform;
    	//zmk,matrix_transform = &five_column_transform;
  	};
  

	// LAYOUT WECHSEL

    macros {
        swleft: SwitchLeft {
            label = "SwitchLeft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(LA(LC(LS(LEFT))))>
                ;
        };
    };

  	macros {
        swright: SwitchRight {
            label = "SwitchRight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&kp LG(LA(LC(LS(RIGHT))))>
                ;
        };
    };

	macros {
        swcraft: SwitchCraft {
            label = "SwitchCraft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N0)>
                ;
        };
    };


	macros {
        swrocket: SwitchRocket {
            label = "SwitchRocket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N7)>
                ;
        };
    };


	macros {
        swswyx: SwitchSwyx {
            label = "SwitchSwyx";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N9)>
                ;
        };
    };

	macros {
        swbrowser: SwitchBrowser {
            label = "SwitchBrowser";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N8)>
                ;
        };
    };



	// WINDOW MOVEMENT

    macros {
        windowleft: windowleft {
            label = "windowleft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp LEFT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        windowright: windowright {
            label = "windowright";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp RIGHT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        windowup: windowup {
            label = "windowup";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp UP>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        windowdown: windowdown {
            label = "windowdown";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp DOWN>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };



	// PG UP, PG DOWN

	macros {
        controlpgup: controlpgup {
            label = "controlpgup";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>
                , <&macro_tap &kp PG_UP>
				, <&macro_wait_time 1500>
                , <&macro_release &kp LCTL>
                ;
        };
    };

	macros {
        controlpgdn: controlpgdn {
            label = "controlpgdn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>
                , <&macro_tap &kp PG_DN>
				, <&macro_wait_time 1500>
                , <&macro_release &kp LCTL>
                ;
        };
    };




    // PROGRAMM SELECT

	macros {
        p1: p1 {
            label = "p1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp N1>
				, <&macro_wait_time 250>
				, <&macro_release &kp N1>
				, <&macro_wait_time 750>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        p2: p2 {
            label = "p2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp N2>
				, <&macro_wait_time 350>
				, <&macro_release &kp N2>
				, <&macro_wait_time 750>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        p3: p3 {
            label = "p3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp N3>
				, <&macro_wait_time 450>
				, <&macro_release &kp N3>
				, <&macro_wait_time 750>
                , <&macro_release &kp LGUI>
                ;
        };
    };
};


&sl {
   	release-after-ms = <5000>;
};


// ------------------------------------------------------------------------------------------------------------------
//					 MAC
// ------------------------------------------------------------------------------------------------------------------


/ {

	keymap
	{	
		compatible = "zmk,keymap";
		

		// --------------------------------------
		// Layer 0 - mChar = 	  Buchstaben	
		// --------------------------------------
	
		mac_buchstaben
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp J 
				&kp D	 
				&kp U
				&kp A
				&kp X
				&kp P
				&kp H
				&kp L
				&kp M
				&kp W
				&kp BSPC
	
				&sl mNAV
				&kp C
				&kp T
				&kp I
				&kp E
				&kp O
				&kp B
				&kp N
				&kp R
				&kp S
				&kp G
				&kp RET
	
				&kp LSHIFT
				&kp F
				&kp V
				&kp MINUS
				&kp Y
				&kp Q
				&kp Z
				&kp SEMI
				&kp LBKT
				&kp SQT
				&kp K
				&kp LSHIFT

				&sl mFUNC
				&kp SPACE 
				&sl mPRG
				&sl mPFUNC
				&sl mNR
				&sl mMOD
			>;
		};



		// --------------------------------------
		// Layer 1 - mBCHAR =	GROSS-BUCHSTABEN
		// --------------------------------------


		mac_bchar
		{

			label = "MAC";

			bindings = <

				&kp ESC
				&kp LS(J) 
				&kp LS(D)
				&kp LS(U) 
				&kp LS(A) 
				&kp LS(X)
				&kp LS(P) 
				&kp LS(H) 
				&kp LS(L) 
				&kp LS(M) 
				&kp LS(W) 
				&kp BACKSPACE
		
				&sl mNAV
				&kp LS(C)
				&kp LS(T)
				&kp LS(I)
				&kp LS(E)
				&kp LS(O)	
				&kp LS(B) 
				&kp LS(N) 
				&kp LS(R) 
				&kp LS(S) 
				&kp LS(G) 
				&kp ENTER
				
				&kp LSHIFT
				&kp LS(F)
				&kp LS(V)
				&kp LS(MINUS)
				&kp LS(Y)
				&kp LS(Q)
				&kp LS(Z)
				&kp LS(SEMICOLON)
				&kp LS(LEFT_BRACKET)
				&kp LS(SINGLE_QUOTE)
				&kp LS(K) 
				&kp LSHIFT
		
				&sl mFUNC
				&kp SPACE 
				&sl mPRG
				&sl mPFUNC						
				&sl mSYM
				&sl mMOD
			>;
		};


		// --------------------------------------
		// Layer 2 - mNR = 	  Zahlen	
		// --------------------------------------

		mac_zahlen
		{
			label = "MAC";

			bindings = <

				&kp ESC	
				&kp LS(N3)
				&kp NUBS
				&kp LS(NUBS)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp LA(E)
				&kp LA(M)
				&kp M
				&kp LS(N5)			
				&kp BSPC

				&sl mNAV
				&kp N1				
				&kp N2				
				&kp N3				
				&kp N4					
				&kp N5				
				&kp N6				
				&kp N7				
				&kp N8				
				&kp N9				
				&kp N0				
				&kp ENTER 

				&kp LSHIFT
				&kp LS(N7)
				&kp LS(N8)
				&kp LS(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(N2)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp SLASH		
				&kp LSHIFT
		
				&sl mFUNC
				&kp SPACE 
				&sl mPRG
				&sl mPFUNC						
				&sl mSYM
				&sl mMOD
			>;		
		};


		// --------------------------------------
		// Layer 3 - mSYM =	Symoble
		// --------------------------------------

		mac_symbole
		{
			label = "MAC";

			bindings = <
				
				&none	
				&kp LS(N3)
				&kp NUBS
				&kp LS(NUBS)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp LA(E)
				&kp LA(M)
				&kp M
				&kp LS(N5)			
				&none

				&none
				&kp LA(N7)				
				&kp LA(N)				
				&kp GRAVE				
				&kp LA(N)					
				&kp LS(N6)	
				&kp EQUAL		
				&kp LS(N1)		
				&kp LS(COMMA)	
				&kp LS(DOT)				
				&kp LS(MINUS)				
				&none

				&none
				&kp LS(N7)
				&kp LS(N8)
				&kp LS(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(N2)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp SLASH		
				&none
		
				&none 
				&kp SPACE 
				&none 
				&none 
				&sl mSSYM
				&none
			>;
		};





		// --------------------------------------
		// Layer 4 - mSSYM =	Special Symbole
		// --------------------------------------

		mac_specialsonderzeichen
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp LS(N3)
				&kp LA(N5)
				&kp LA(N6)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp LA(E)
				&kp LA(M)
				&kp M
				&kp LS(N5)			
				&kp BSPC

				&trans
				&kp LA(N7)				
				&kp LA(N)				
				&kp LS(GRAVE)
				&kp LA(N)					
				&kp LS(N6)				
				&kp LS(EQUAL)	
				&kp LS(N1)				
				&kp LS(COMMA)	
				&kp LS(DOT)				
				&kp LS(MINUS)				
				&none

				&none
				&kp LS(LA(N7))
				&kp LA(N8)
				&kp LA(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(NUHS)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp LS(SLASH)	
				&none

				&none 
				&kp SPACE 
				&none			
				&none
				&trans
				&none
			>;
		};



		// --------------------------------------------
		// Layer 5 - mPFUNC =	Programm-Funkionen
		// --------------------------------------------

		mac_pfunc
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp F1
				&kp F2
				&kp F3
				&kp F4
				&kp F5
				&kp F6
				&kp F7
				&kp F8
				&kp F9
				&kp F10
				&none

				&trans
				&kp LG(N1)
				&kp LG(N2)
				&kp LG(N3)
				&kp LG(N4)
				&kp LG(N5)
				&kp LG(N6)
				&kp LG(N7)
				&kp LG(N8)
				&kp LG(N9)
				&kp LG(N0)
				&none

				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
		
				&none 
				&none 
				&none 
				&sl mSPFUNC
				&none
				&none			
			>;
		};	



		// --------------------------------------------
		// Layer 6 - mSPFUNC =	Special Programm-Funkionen
		// --------------------------------------------

		mac_spfunc
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&bt BT_PRV
				&kp C_PREVIOUS 
				&kp C_PP 
				&kp C_NEXT 
				&bt BT_CLR 	
				&bt BT_CLR 	
				&kp C_VOLUME_DOWN 
				&bt BT_SEL 0
				&kp C_VOLUME_UP 
				&bt BT_NXT
				&none

				&trans		
				&none	
				&none
				&none
				&none
				&none
				&none
				&kp LG(LC(LA(F1)))
				&none
				&kp LG(LC(LA(F2)))
				&none
				&none

				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none	
				
				&none 
				&none 
				&none 
				&trans
				&none
				&none	

		
			>;
		};	



		// --------------------------------------
		// Layer 7 - mPRG =	Programme
		// --------------------------------------

		mac_programme
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp LG(LC(N1))
				&kp LG(LC(N2))
				&kp LG(LC(N3))
				&kp LG(LC(N4))
				&kp LG(LC(N5))
				&kp LG(LC(N6))
				&kp LG(LC(N7))
				&kp LG(LC(N8))
				&kp LG(LC(N9))
				&kp LG(LC(N0))
				&kp LG(Q)

				&trans
				&kp LG(LA(N1))
				&kp LG(LA(N2))
				&kp LG(LA(N3))
				&kp LG(LA(N4))
				&kp LG(LA(N5))
				&kp LG(LA(N6))
				&kp LG(LA(N7))
				&kp LG(LA(N8))
				&kp LG(LA(N9))
				&kp LG(LA(N0))
				&kp LG(TAB)

				&kp LG(M)
				&kp LG(LA(LC(F1)))
				&kp LG(LA(LC(F2)))
				&kp LG(LA(LC(F3)))
				&kp LG(LA(LC(F4)))
				&kp LG(LA(LC(F5)))				
				&kp LG(LA(LC(LS(TAB))))
				&swleft
				&kp LG(LC(LA(LEFT)))
				&kp LG(LC(LA(RIGHT)))
				&swright
				&kp LG(H)	
		
				&none 
				&none 
				&sl mSPRG
				&none 
				&none 
				&none 
			>;
		};


		// --------------------------------------
		// Layer 8 -mSPRG =	Spezial Prgramme
		// --------------------------------------


		mac_sprogramme
		{

			label = "MAC";

			bindings = <

				&kp ESC
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&kp LG(LA(ESC)) 	// Sofort beenden
		
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&kp LS(LG(TAB))

				&kp LG(LA(LC(LS(NUHS))))
				&kp LG(LA(LC(F1)))
				&kp LG(LA(LC(F2)))
				&kp LG(LA(LC(F3)))
				&kp LG(LA(LC(F4)))
				&kp LG(LA(LC(F5)))
				&kp LG(LA(LC(LS(DOWN))))
				&swleft
				&kp LG(LC(LA(LEFT)))
				&kp LG(LC(LA(RIGHT)))
				&swright
				&kp LG(LA(H))
		
				&none 
				&none 
				&trans
				&none 
				&none 
				&none 
			>;
		};



		// --------------------------------------
		// Layer 9 - mFUNC =	Funktionen
		// --------------------------------------

		mac_function
		{
			label = "MAC";

			bindings = <
	
				&kp ESC
				&kp LG(LA(LC(LS(PG_DN))))  	// Fokus
				&kp LG(U) 
				&kp LG(B) 
				&kp LG(I)
				&kp LG(LS(B)) 
				&kp LG(LC(SPACE))   		// Smily
				&kp LG(Y)
				&kp LG(LC(UP))			    // Window up
				&kp LG(LS(Y)) 
				&kp LG(RBKT)
				&kp LG(LA(LC(LS(PG_DN))))  	// Fokus
		
				&trans
				&kp LG(LS(G)) 
				&kp LG(LA(C)) 
				&kp LG(LA(V)) 
				&kp LG(SPACE)  
				&kp LG(LA(LC(LS(HOME))))	// drehen
				&kp LG(LA(LC(LS(END))))		// drehen
				&kp LG(LC(LEFT))			// window 
				&kp LG(LC(DOWN))			// window 
				&kp LG(LC(RIGHT))			// window 
				&kp LG(SLASH)
				&kp LG(LA(LC(LS(F5))))  	//Shortcat

				&none
				&kp LG(LA(LC(LS(GRAVE))))	//Seitenleiste links
				&kp LG(SEMI)
				&kp LG(SQT)
				&kp LG(LA(LC(LS(EQUAL))))  	//Seitenleiste rechts
				&kp LG(LS(N4))    		   	// Screenshot
				&kp LG(LC(Q))		        // Sperren
				&kp LC(LS(TAB))
				&kp LG(UP)
				&kp LG(DOWN)
				&kp LC(TAB)
				&none
				
				&sl mSFUNC
				&none
				&none
				&none 
				&to mNR
				&none
			>;
		};



		// --------------------------------------
		// Layer 10 - mSFUNC =	Spezial Funktionen
		// --------------------------------------

		mac_specialfunction
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&none
				&none
				&none
				&none
				&kp LG(LS(EQUAL)) // block
				&none
				&none
				&kp LG(LA(UP))    // craft
				&none
				&kp LC(PG_UP)
				&none

				&trans				
				&none
				&none
				&none
				&none
				&none
				&none
				&none
				&kp LG(LA(DOWN)) 	// craft
				&none
				&kp LC(PG_DN)
				&none

				&none
				&none
				&kp LG(LA(LEFT)) 
				&kp LG(LA(RIGHT)) 
				&none
				&none				
				&none
				&none
				&kp LG(LA(LEFT)) 
				&kp LG(LA(RIGHT)) 
				&none
				&none
		
				&trans
				&none 
				&none 
				&none 
				&none 
				&none               
			>;
		};



		// --------------------------------------
		// Layer 11 - mMOD =	GUI
		// --------------------------------------

		mac_mod
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp LG(J)
				&kp LG(D)
				&kp LG(U) 
				&kp LG(A)
				&kp LG(X)
				&kp LG(P)
				&kp LG(H)
				&kp LG(L) 
				&kp LG(M)
				&kp LG(W) 
				&kp LA(BACKSPACE)
		
				&trans
				&kp LG(C)
				&kp LG(T)
				&kp LG(I)
				&kp LG(E)
				&kp LG(O)	
				&kp LG(B)
				&kp LG(N)
				&kp LG(R)
				&kp LG(S)
				&kp LG(G)
				&kp LG(ENTER)

				&none
				&kp LG(F)
				&kp LG(V)
				&kp LG(MINUS)
				&kp LG(Y)
				&kp LG(Q)
				&kp LG(Z)
				&kp LG(SEMICOLON)
				&kp LG(LEFT_BRACKET)
				&kp LG(SINGLE_QUOTE)
				&kp LG(K) 
				&kp LA(DELETE)
		
				&none 
				&to mCHAR 
				&none 
				&none 
				&none 
				&sl mSMOD
			>;
		};



		// --------------------------------------
		// Layer 12 - mSMOD =	Spezial Mod
		// --------------------------------------

		mac_smod
		{	
			label = "MAC";

			bindings = <
			
				&kp ESC
				&kp LA(LG(J))
				&kp LA(LG(D))
				&kp LA(LG(U))
				&kp LA(LG(A))
				&kp LA(LG(X))
				&kp LA(LG(P))
				&kp LA(LG(H)) 
				&kp LA(LG(L)) 
				&kp LA(LG(M)) 
				&kp LA(LG(W)) 
				&kp LG(BACKSPACE)
		
				&trans
				&kp LA(LG(C))
				&kp LA(LG(T))
				&kp LA(LG(I))
				&kp LA(LG(E))
				&kp LA(LG(O))	
				&kp LA(LG(B))
				&kp LA(LG(N))
				&kp LA(LG(R))
				&kp LA(LG(S))
				&kp LA(LG(G)) 
				&kp LA(LG(ENTER))

				&none
				&kp LA(LG(F))
				&kp LA(LG(V))
				&kp LA(LG(MINUS))
				&kp LA(LG(Y))
				&kp LA(LG(Q))
				&kp LA(LG(Z))
				&kp LA(LG(SEMICOLON))
				&kp LA(LG(LEFT_BRACKET))
				&kp LA(LG(SINGLE_QUOTE))
				&kp LA(LG(K)) 
				&kp LG(DELETE)

				&none 
				&none 
				&none 
				&none 
				&sl mSSMOD
				&trans
			>;
		};

		// --------------------------------------
		// Layer 13 - mSSMOD =	Super Spezial Mod
		// --------------------------------------

		mac_ssmod
		{	
			label = "MAC";

			bindings = <
			
				&kp ESC
				&kp LS(LG(J))
				&kp LS(LG(D))
				&kp LS(LG(U))
				&kp LS(LG(A))
				&kp LS(LG(X))
				&kp LS(LG(P))
				&kp LS(LG(H)) 
				&kp LS(LG(L)) 
				&kp LS(LG(M)) 
				&kp LS(LG(W)) 
				&none
		
				&trans
				&kp LS(LG(C))
				&kp LS(LG(T))
				&kp LS(LG(I))
				&kp LS(LG(E))
				&kp LS(LG(O))	
				&kp LS(LG(B))
				&kp LS(LG(N))
				&kp LS(LG(R))
				&kp LS(LG(S))
				&kp LS(LG(G)) 
				&kp LS(LG(ENTER)) 

				&none
				&kp LS(LG(F))
				&kp LS(LG(V))
				&kp LS(LG(MINUS))
				&kp LS(LG(Y))
				&kp LS(LG(Q))
				&kp LS(LG(Z))
				&kp LS(LG(SEMICOLON))
				&kp LS(LG(LEFT_BRACKET))
				&kp LS(LG(SINGLE_QUOTE))
				&kp LS(LG(K)) 
				&none

				&none 
				&none 
				&none 
				&none 
				&none 
				&trans
			>;
		};    
				


		// --------------------------------------
		// Layer = 14 - mNAV	  Navigation
		// --------------------------------------

		mac_navigation
		{		
			label = "MAC";

			bindings = <

				&none
				&kp LGUI
				&kp LG(LS(LEFT)) 
				&kp DELETE
				&kp LG(LS(RIGHT)) 
				&kp LG(LA(LC(LS(F9))))
				&kp LG(UP)
				&kp LG(LEFT) 
				&kp UP
				&kp LG(RIGHT)
				&kp PG_UP 
				&kp BACKSPACE

				&trans 
				&kp LSHIFT
				&kp LC(LS(TAB))
				&kp LC(TAB)
				&kp LCTL
				&kp LG(LA(LC(LS(F10))))
				&kp LG(DOWN) 
				&kp LEFT 
				&kp DOWN
				&kp RIGHT 	
				&kp PG_DN
				&kp ENTER
				
				&to mBCHAR
				&none
				&kp LS(LA(LEFT))
				&kp LS(LA(RIGHT))
				&kp INSERT
				&kp LG(LA(LC(LS(F11))))
				&kp LG(LA(LC(LS(F12))))
				&kp LS(TAB)
				&kp LA(LEFT)
				&kp LA(RIGHT)
				&kp TAB
				&kp DELETE

				&trans
				&kp SPACE 
				&trans
				&trans
				&kp LSHIFT 
				&trans
			>;
		};



		// ------------------------------------------------------------------------------------------------------------------
		//					WINDOWS
		// ------------------------------------------------------------------------------------------------------------------


		
		
		// ------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------
	};		
};




                
                



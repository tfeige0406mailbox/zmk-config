#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define mCHAR 0
#define mNR 1
#define mSYM 2
#define mSSYM 3
#define mSSSYM 4
#define mPRG 5
#define mSPRG 6
#define mFUNC 7
#define mSFUNC 8
#define mGUI 9
#define mAGUI 10
#define mNAV 11

#define wCHAR 12
#define wNR 13
#define wSYM 14
#define wSSYM 15
#define wSSSYM 16
#define wPRG 17
#define wSPRG 18
#define wFUNC 19
#define wSFUNC 20
#define wCTL 21
#define wSCTL 22
#define wNAV 23

#define mwBCHAR 24



/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
  
  behaviors {
    skq: sticky_key_quick_release {
      compatible = "zmk,behavior-sticky-key";
      label = "STICKY_KEY_QUICK_RELEASE";
      #binding-cells = <1>;
      bindings = <&kp>;
      release-after-ms = <1000>;
      quick-release;
    };
  };
  
  macros {
        swleft: SwitchLeft {
            label = "SwitchLeft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp LG(LA(LC(LS(LEFT))))>
                , <&to mCHAR>
                ;
        };
    };

  	macros {
        swright: SwitchRight {
            label = "SwitchRight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp LG(LA(LC(LS(RIGHT))))>
                , <&to wCHAR>
                ;
        };
    };

};
/ {




keymap
{
	compatible = "zmk,keymap";

	// --------------------------------------
	// Layer 0 - mChar = 	  Buchstaben	
	// --------------------------------------
	
	mac_buchstaben
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp J 
			&kp D	 
			&kp U
 			&kp A
	 		&kp X
	  		&kp P
 			&kp H
	 		&kp L
	 		&kp M
 			&kp W
 			&kp BSPC
 
			&sl mNAV
 			&kp C
 			&kp T
			&kp I
			&kp E
			&kp O
 			&kp B
			&kp N
 			&kp R
 			&kp S
 			&kp G
 			&kp RET
 
			&to mNR
			&kp F
	 		&kp V
 			&kp MINUS
 			&kp Y
 			&kp Q
 			&kp Z
 			&kp SEMI
			&kp LBKT
			&kp SQT
			&kp K
	 		&to mCHAR

			&sl mFUNC
 			&kp SPACE 
			&sl mPRG
			&sl mNR
 			&skq LSHIFT
			&sl mGUI

		>;
	};



};
};

                
                



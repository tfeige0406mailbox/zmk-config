#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// MAC

#define mCHAR 0
#define mNR 1

#define mSYM 2
#define mSSYM 3

#define mPFUNC 4
#define mSPFUNC 5

#define mPRG 6
#define mSPRG 7

#define mFUNC 8
#define mSFUNC 9

#define mMOD 10
#define mSMOD 11
#define mSSMOD 12

#define mNAV 13

// WINDOWS

#define wCHAR 14
#define wNR 15

#define wSYM 16
#define wSSYM 17

#define wPFUNC 18
#define wSPFUNC 19

#define wPRG 20
#define wSPRG 21

#define wFUNC 22
#define wSFUNC 23

#define wMOD 24
#define wSMOD 25
#define wSSMOD 26

#define wNAV 27




/ {
  
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
  
	// LAYOUT WECHSEL

    macros {
        swleft: SwitchLeft {
            label = "SwitchLeft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(LA(LC(LS(LEFT))))>
                ;
        };
    };

  	macros {
        swright: SwitchRight {
            label = "SwitchRight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&kp LG(LA(LC(LS(RIGHT))))>
                ;
        };
    };

	macros {
        swcraft: SwitchCraft {
            label = "SwitchCraft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N0)>
                ;
        };
    };


	macros {
        swrocket: SwitchRocket {
            label = "SwitchRocket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N7)>
                ;
        };
    };


	macros {
        swswyx: SwitchSwyx {
            label = "SwitchSwyx";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N9)>
                ;
        };
    };

	macros {
        swbrowser: SwitchBrowser {
            label = "SwitchBrowser";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N8)>
                ;
        };
    };


	// WINDOW MOVEMENT

    macros {
        windowleft: windowleft {
            label = "windowleft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp LEFT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        windowright: windowright {
            label = "windowright";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp RIGHT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        windowup: windowup {
            label = "windowup";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp UP>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        windowdown: windowdown {
            label = "windowdown";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp DOWN>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        controlpgup: controlpgup {
            label = "controlpgup";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>
                , <&macro_tap &kp PG_UP>
				, <&macro_wait_time 500>
                , <&macro_release &kp LCTL>
                ;
        };
    };

	macros {
        controlpgdn: controlpgdn {
            label = "controlpgdn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>
                , <&macro_tap &kp PG_DN>
				, <&macro_wait_time 500>
                , <&macro_release &kp LCTL>
                ;
        };
    };




    // PROGRAMM SELECT

	macros {
        p1: p1 {
            label = "p1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp N1>
				, <&macro_wait_time 250>
				, <&macro_release &kp N1>
				, <&macro_wait_time 750>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        p2: p2 {
            label = "p2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp N2>
				, <&macro_wait_time 350>
				, <&macro_release &kp N2>
				, <&macro_wait_time 750>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        p3: p3 {
            label = "p3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp N3>
				, <&macro_wait_time 450>
				, <&macro_release &kp N3>
				, <&macro_wait_time 750>
                , <&macro_release &kp LGUI>
                ;
        };
    };


};





// ------------------------------------------------------------------------------------------------------------------
//					 MAC
// ------------------------------------------------------------------------------------------------------------------




/ {

keymap
{
	compatible = "zmk,keymap";

	// --------------------------------------
	// Layer 0 - mChar = 	  Buchstaben	
	// --------------------------------------
	
	mac_buchstaben
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp J 
			&kp D	 
			&kp U
 			&kp A
	 		&kp X
	  		&kp P
 			&kp H
	 		&kp L
	 		&kp M
 			&kp W
 			&kp BSPC
 
			&sl mNAV
 			&kp C
 			&kp T
			&kp I
			&kp E
			&kp O
 			&kp B
			&kp N
 			&kp R
 			&kp S
 			&kp G
 			&kp RET
 
			&kp LSHIFT
			&kp F
	 		&kp V
 			&kp MINUS
 			&kp Y
 			&kp Q
 			&kp Z
 			&kp SEMI
			&kp LBKT
			&kp SQT
			&kp K
	 		&kp LSHIFT

			&sl mFUNC
 			&kp SPACE 
			&sl mPRG
			&sl mSYM
 			&sl mNR
			&sl mMOD
		>;
	};


	// --------------------------------------
	// Layer 1 - mNR = 	  Zahlen	
	// --------------------------------------

	mac_zahlen
	{
		label = "MAC-NR";

		bindings = <

			&kp ESC	
			&none
			&none
			&none
			&none
			&kp X
			&none
			&none
			&none
			&kp M
			&none
			&kp BSPC

			&sl mNAV
			&kp N1				
			&kp N2				
			&kp N3				
			&kp N4					
			&kp N5				
			&kp N6				
			&kp N7				
			&kp N8				
			&kp N9				
			&kp N0				
			&kp ENTER 

			&to mNR
			&kp LS(N7)
			&kp LS(N8)
	 		&kp LS(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(N2)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp SLASH		
			&to mCHAR
	
			&sl mFUNC
 			&kp SPACE 
			&sl mPRG
	 		&sl mPFUNC						
			&sl mSYM
			&sl mMOD
		>;		
	};



	// --------------------------------------
	// Layer 2 - mSYM =	Symoble
	// --------------------------------------

	mac_symbole
	{
		label = "MAC";

		bindings = <
			
			&kp ESC
			&kp LG(N1)
			&kp LG(N2)
			&kp LG(N3)
			&kp LG(N4)
			&kp LG(N5)
			&kp LG(N6)
			&kp LG(N7)
			&kp LG(N8)
			&kp LG(N9)
			&kp LG(N0)
			&kp BACKSPACE

			&trans
			&kp N1				
			&kp N2				
			&kp N3				
			&kp N4					
			&kp N5				
			&kp N6				
			&kp N7				
			&kp N8				
			&kp N9			
			&kp N0				
			&kp ENTER

			&to mNR
			&kp LS(N7)
			&kp LS(N8)
	 		&kp LS(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(N2)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp SLASH		
			&to mCHAR
	
			&none 
			&kp SPACE 
			&none 
			&none 
			&sl mSSYM
			&none
		>;
	};



	// --------------------------------------
	// Layer 3 - mSSYM =	Special Symbole
	// --------------------------------------

	mac_specialsonderzeichen
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp LA(L)
			&kp LS(N4)
			&kp LA(N)
			&kp LS(GRAVE)
			&kp EQUAL
			&kp LA(N7)
			&kp LS(N1)
			&kp GRAVE
			&kp GRAVE
			&kp LS(MINUS)
			&kp LG(H)

			&trans
			&kp LS(N6)
			&kp NUBS
			&kp LS(NUBS) 
			&kp BACKSLASH 	
			&kp LS(N3)
			&kp RA(M)
			&kp RA(E)
			&kp LS(COMMA)
			&kp LS(DOT)
			&kp LS(N5)
			&kp LG(LA(LC(LS(F11))))	

			&to mNR
			&kp LS(N7)
			&kp LS(N8)
	 		&kp LS(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(N2)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp SLASH		
			&to mCHAR

			&none 
			&kp SPACE 
			&none			
			&none
			&trans
			&none
		>;
	};



	// --------------------------------------------
	// Layer 4 - mPFUNC =	Programm-Funkionen
	// --------------------------------------------

	mac_pfunc
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp LA(L)
			&kp LS(N4)
			&kp LA(N)
			&kp LS(GRAVE)
			&kp LS(EQUAL)
			&kp LA(N7)
			&kp LS(N1)
			&kp GRAVE
			&kp GRAVE
			&kp LS(MINUS)
			&kp LG(LA(H))

			&trans
			&kp LS(N6)
			&kp RA(N5)
			&kp RA(N6)
			&kp NUHS 	
			&kp LS(N3)
			&kp RA(M)
			&kp RA(E)
			&kp LS(COMMA)
			&kp LS(DOT)			
			&kp LS(N5)
			&kp LG(LA(LC(LS(F12))))	

			&to mNR
			&kp LS(LA(N7))
			&kp LA(N8)
	 		&kp LA(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(NUHS)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp LS(SLASH)
			&to mCHAR
	
			&none 
			&kp SPACE 
			&none 
			&trans
			&none
			&none			
		>;
	};	



	// --------------------------------------------
	// Layer 5 - mSPFUNC =	Special Programm-Funkionen
	// --------------------------------------------

	mac_spfunc
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp LA(L)
			&kp LS(N4)
			&kp LA(N)
			&kp LS(GRAVE)
			&kp LS(EQUAL)
			&kp LA(N7)
			&kp LS(N1)
			&kp GRAVE
			&kp GRAVE
			&kp LS(MINUS)
			&kp LG(LA(H))

			&trans
			&kp LS(N6)
			&kp RA(N5)
			&kp RA(N6)
			&kp NUHS 	
			&kp LS(N3)
			&kp RA(M)
			&kp RA(E)
			&kp LS(COMMA)
			&kp LS(DOT)			
			&kp LS(N5)
			&kp LG(LA(LC(LS(F12))))	

			&to mNR
			&kp LS(LA(N7))
			&kp LA(N8)
	 		&kp LA(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(NUHS)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp LS(SLASH)
			&to mCHAR
	
			&none 
			&kp SPACE 
			&none 
			&trans
			&none
			&none			
		>;
	};	



	// --------------------------------------
	// Layer 6 - mPRG =	Programme
	// --------------------------------------

	mac_programme
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp LG(LC(N1))
			&kp LG(LC(N2))
			&kp LG(LC(N3))
			&kp LG(LC(N4))
			&kp LG(LC(N5))
			&kp LG(LC(N6))
			&kp LG(LC(N7))
			&kp LG(LC(N8))
			&kp LG(LC(N9))
			&kp LG(LC(N0))
			&kp LG(Q)

			&trans
			&kp LG(LA(N1))
			&kp LG(LA(N2))
			&kp LG(LA(N3))
			&kp LG(LA(N4))
			&kp LG(LA(N5))
			&kp LG(LA(N6))
			&kp LG(LA(N7))
			&kp LG(LA(N8))
			&kp LG(LA(N9))
			&kp LG(LA(N0))
			&kp LG(TAB)

			&to mNR
			&kp LG(LC(LA(F1)))
			&kp LG(LC(LA(F2)))
			&kp LG(LC(LA(F3)))
			&kp LG(LC(LA(F4)))
			&kp LG(LC(LA(F5)))
			&kp LG(LC(LA(F6)))
			&kp LG(LC(LA(F7)))
			&kp LG(LC(LA(F8)))
			&kp LG(LC(LA(F9)))
			&kp LG(LC(LA(F10)))
			&to mCHAR
	
			&none 
			&kp LG(LA(LC(LS(DOWN))))
			&sl mSPRG
			&swleft
			&kp LG(LA(LC(LS(TAB))))
			&swright
		>;
	};


	// --------------------------------------
	// Layer 7 -mSPRG =	Spezial Prgramme
	// --------------------------------------


	mac_sprogramme
	{

		label = "MAC";

		bindings = <

			&kp ESC
			&kp LS(LG(J))
			&kp LS(LG(D))
			&kp LS(LG(U))
			&kp LS(LG(A))
			&kp LS(LG(X))
			&kp LS(LG(P))
			&kp LS(LG(H)) 
			&kp LS(LG(L)) 
			&kp LS(LG(M)) 
			&kp LS(LG(W)) 
			&kp LG(LA(ESC)) // Sofort beenden
	
			&trans
			&kp LS(LG(C))
			&kp LS(LG(T))
			&kp LS(LG(I))
			&kp LS(LG(E))
			&kp LS(LG(O))	
			&kp LS(LG(B))
			&kp LS(LG(N))
			&kp LS(LG(R))
			&kp LS(LG(S))
			&kp LS(LG(G)) 
			&none

			&to mNR
			&kp LS(LG(F))
			&kp LS(LG(V))
			&kp LS(LG(MINUS))
			&kp LS(LG(Y))
			&kp LS(LG(Q))
			&kp LS(LG(Z))
			&kp LS(LG(SEMICOLON))
			&kp LS(LG(LEFT_BRACKET))
			&kp LS(LG(SINGLE_QUOTE))
			&kp LS(LG(K)) 
			&to mCHAR
	
			&none 
			&kp LG(LA(LC(LS(DOWN))))
			&trans
			&swleft
			&kp LG(LA(LC(LS(TAB))))
			&swright
		>;
	};



	// --------------------------------------
	// Layer 8 - mFUNC =	Funktionen
	// --------------------------------------

	mac_function
	{
		label = "MAC";

		bindings = <
 
			&kp ESC
			&kp LG(LS(B)) 
			&kp LG(U) 
			&kp LG(B) 
			&kp LG(I)
			&kp LG(LS(EQUAL)) 
			&kp LG(LC(SPACE))
			&kp LG(Y)
			&kp LG(LA(UP)) 
			&kp LG(LS(Y)) 
			&kp LG(RBKT)
			&kp LA(DELETE)
	
			&trans
			&kp LG(LS(G)) 
			&kp LG(LA(C)) 
			&kp LG(LA(V)) 
			&kp LG(SPACE)  
			&kp LG(LA(LC(LS(F2))))	
			&kp LG(LA(LC(LS(F3))))
			&kp LG(LA(LEFT)) 
			&kp LG(LA(DOWN)) 
			&kp LG(LA(RIGHT))  
			&kp LG(SLASH)
			&kp LG(LA(LC(LS(RBRC))))  // Fokus

			&to mNR
			&kp LG(LA(LC(LS(F1)))) //Seitenleiste links
			&kp LG(SEMI)
			&kp LG(SQT)
			&kp LG(LA(LC(LS(F4))))  // Shortcat
			&kp LG(LS(N4))       // Screenshot
			&kp LG(LC(Q))        // Sperren
			&kp LC(LS(TAB))
			&kp LG(UP)
			&kp LG(DOWN)
			&kp LC(TAB)
			&to mCHAR
			
			&sl mSFUNC
			&none
			&none
			&none 
			&none 
			&kp LG(LA(LC(LS(F5))))  //Shortcat
		>;
	};







	// --------------------------------------
	// Layer 9 - mSFUNC =	Spezial Funktionen
	// --------------------------------------

	mac_specialfunction
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&bt BT_PRV
			&kp C_PREVIOUS 
			&kp C_PP 
			&kp C_NEXT 
			&bt BT_CLR 	
			&bt BT_CLR 	
			&kp C_VOLUME_DOWN 
			&bt BT_SEL 0
			&kp C_VOLUME_UP 
			&bt BT_NXT
			&kp LG(DEL)

			&trans
			&kp LG(LA(LC(LS(C))))
			&kp LG(LA(LC(LS(T))))
			&kp LG(LA(LC(LS(I))))
			&kp LG(LA(LC(LS(E))))
			&kp LG(LA(LC(LS(O))))
			&kp LG(LA(LC(LS(B))))
			&kp LG(LA(LC(LS(N))))
			&kp LG(LA(LC(LS(R))))
			&kp LG(LA(LC(LS(S))))
			&kp LG(LA(LC(LS(G))))
			&kp LG(LA(LC(LS(SLASH))))

			&to mNR
			&kp LG(LA(LC(LS(F))))
			&kp LG(LA(LC(LS(V))))
			&kp LG(LA(LC(LS(MINUS))))
			&kp LG(LA(LC(LS(Y))))
			&kp LG(LA(LC(LS(Q))))
			&kp LG(LA(LC(LS(Z))))
			&kp LG(LA(LC(LS(SEMI))))
			&kp LG(LA(LC(LS(LBKT))))
			&kp LG(LA(LC(LS(SQT))))
			&kp LG(LA(LC(LS(K))))
			&to mCHAR
	
			&trans
			&none 
			&none 
			&none 
			&none 
			&none               
		>;
	};



	// --------------------------------------
	// Layer 10 - mMOD =	GUI
	// --------------------------------------

	mac_mod
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp LG(J)
			&kp LG(D)
			&kp LG(U) 
			&kp LG(A)
			&kp LG(X)
			&kp LG(P)
			&kp LG(H)
			&kp LG(L) 
			&kp LG(M)
			&kp LG(W) 
			&kp LA(BACKSPACE)
	
			&trans
			&kp LG(C)
			&kp LG(T)
			&kp LG(I)
			&kp LG(E)
			&kp LG(O)	
			&kp LG(B)
			&kp LG(N)
			&kp LG(R)
			&kp LG(S)
			&kp LG(G)
			&kp LG(ENTER)

			&kp LSHIFT
			&kp LG(F)
			&kp LG(V)
			&kp LG(MINUS)
			&kp LG(Y)
			&kp LG(Q)
			&kp LG(Z)
			&kp LG(SEMICOLON)
			&kp LG(LEFT_BRACKET)
			&kp LG(SINGLE_QUOTE)
			&kp LG(K) 
			&kp LSHIFT
	
			&none 
			&none 
			&none 
			&none 
			&none 
			&sl mSMOD
		>;
	};



	// --------------------------------------
	// Layer 11 - mSMOD =	Spezial Mod
	// --------------------------------------

	mac_smod
	{	
		label = "MAC";

		bindings = <
		
			&kp ESC
			&kp LA(LG(J))
			&kp LA(LG(D))
			&kp LA(LG(U))
			&kp LA(LG(A))
			&kp LA(LG(X))
			&kp LA(LG(P))
			&kp LA(LG(H)) 
			&kp LA(LG(L)) 
			&kp LA(LG(M)) 
			&kp LA(LG(W)) 
			&kp LG(BACKSPACE)
	
			&trans
			&kp LA(LG(C))
			&kp LA(LG(T))
			&kp LA(LG(I))
			&kp LA(LG(E))
			&kp LA(LG(O))	
			&kp LA(LG(B))
			&kp LA(LG(N))
			&kp LA(LG(R))
			&kp LA(LG(S))
			&kp LA(LG(G)) 
			&kp LA(LG(ENTER))

			&to mNR
			&kp LA(LG(F))
			&kp LA(LG(V))
			&kp LA(LG(MINUS))
			&kp LA(LG(Y))
			&kp LA(LG(Q))
			&kp LA(LG(Z))
			&kp LA(LG(SEMICOLON))
			&kp LA(LG(LEFT_BRACKET))
			&kp LA(LG(SINGLE_QUOTE))
			&kp LA(LG(K)) 
			&to mCHAR

			&none 
			&none 
			&none 
			&none 
			&sl mSSMOD
			&trans
		>;
	};

    // --------------------------------------
	// Layer 12 - mSSMOD =	Super Spezial Mod
	// --------------------------------------

	mac_ssmod
	{	
		label = "MAC";

		bindings = <
		
			&kp ESC
			&kp LS(LG(J))
			&kp LS(LG(D))
			&kp LS(LG(U))
			&kp LS(LG(A))
			&kp LS(LG(X))
			&kp LS(LG(P))
			&kp LS(LG(H)) 
			&kp LS(LG(L)) 
			&kp LS(LG(M)) 
			&kp LS(LG(W)) 
			&kp LG(LA(ESC)) // Sofort beenden
	
			&trans
			&kp LS(LG(C))
			&kp LS(LG(T))
			&kp LS(LG(I))
			&kp LS(LG(E))
			&kp LS(LG(O))	
			&kp LS(LG(B))
			&kp LS(LG(N))
			&kp LS(LG(R))
			&kp LS(LG(S))
			&kp LS(LG(G)) 
			&none

			&to mNR
			&kp LS(LG(F))
			&kp LS(LG(V))
			&kp LS(LG(MINUS))
			&kp LS(LG(Y))
			&kp LS(LG(Q))
			&kp LS(LG(Z))
			&kp LS(LG(SEMICOLON))
			&kp LS(LG(LEFT_BRACKET))
			&kp LS(LG(SINGLE_QUOTE))
			&kp LS(LG(K)) 
			&to mCHAR

			&none 
			&none 
			&none 
			&none 
			&none 
			&trans
		>;
	};    
              


   	// --------------------------------------
	// Layer = 13 - mNAV	  Navigation
	// --------------------------------------

	mac_navigation
	{		
		label = "MAC";

		bindings = <

			&kp ESC
			&kp LGUI
			&kp LG(LS(LEFT)) 
			&kp DEL
			&kp LG(LS(RIGHT)) 
            &kp LG(LA(LC(LS(F8))))
			&kp LG(UP)
			&kp LG(LEFT) 
			&kp UP
			&kp LG(RIGHT)
			&kp PG_UP 
			&kp DELETE

			&trans 
			&kp LSHIFT
			&kp LC(LGUI)
			&kp LALT
			&kp LGUI
			&kp LG(LA(LC(LS(F9))))
			&kp LG(DOWN) 
			&kp LEFT 
			&kp DOWN
			&kp RIGHT 	
			&kp PG_DN
			&kp ENTER
			
			&to mNR
			&kp CAPSLOCK
			&kp LS(LA(LEFT))
			&kp LS(LA(RIGHT))
			&kp LCTRL
			&kp LG(LA(LC(LS(F10))))
			&kp LG(LA(LC(LS(EQUAL))))
			&kp LS(TAB)
			&kp LA(LEFT)
			&kp LA(RIGHT)
			&kp TAB
			&to mCHAR

			&trans
			&kp SPACE 
			&trans
			&trans
			&kp LSHIFT 
			&trans
		>;
	};



// ------------------------------------------------------------------------------------------------------------------
//					WINDOWS
// ------------------------------------------------------------------------------------------------------------------














// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------


};
};

                
                



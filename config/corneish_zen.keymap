
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// MAC

#define mCHAR 0
#define mBCHAR 1
#define mNR 2

#define mSYM 3
#define mSSYM 4

#define mPFUNC 5
#define mSPFUNC 6

#define mPRG 7
#define mSPRG 8

#define mFUNC 9
#define mSFUNC 10

#define mMOD 11
#define mSMOD 12
#define mSSMOD 13

#define mNAV 14




// WINDOWS

#define wCHAR 15
#define wBCHAR 16
#define wNR 17


#define wSYM 18
#define wSSYM 19

#define wPFUNC 20
#define wSPFUNC 21

#define wPRG 22
#define wSPRG 23

#define wFUNC 24
#define wSFUNC 25

#define wMOD 26
#define wSMOD 27
#define wSSMOD 28

#define wNAV 29




/ {
  
  	chosen {
    	zmk,matrix_transform = &default_transform;
    	//zmk,matrix_transform = &five_column_transform;
  	};


	// LAYOUT WECHSEL

    macros {
        swleft: SwitchLeft {
            label = "SwitchLeft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(LA(LC(LS(LEFT))))>
                ;
        };
    };

  	macros {
        swright: SwitchRight {
            label = "SwitchRight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&kp LG(LA(LC(LS(RIGHT))))>
                ;
        };
    };






	

};


&sl {
   	release-after-ms = <5000>;
};


// ------------------------------------------------------------------------------------------------------------------
//					 MAC
// ------------------------------------------------------------------------------------------------------------------


/ {

	keymap
	{	
		compatible = "zmk,keymap";
		

		// --------------------------------------
		// Layer 0 - mChar = 	  Buchstaben	
		// --------------------------------------
	
		mac_buchstaben
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp J 
				&kp D	 
				&kp U
				&kp A
				&kp X
				&kp P
				&kp H
				&kp L
				&kp M
				&kp W
				&kp BSPC
	
				&sl mNAV
				&kp C
				&kp T
				&kp I
				&kp E
				&kp O
				&kp B
				&kp N
				&kp R
				&kp S
				&kp G
				&kp RET
	
				&kp LSHIFT
				&kp F
				&kp V
				&kp MINUS
				&kp Y
				&kp Q
				&kp Z
				&kp SEMI
				&kp LBKT
				&kp SQT
				&kp K
				&kp LSHIFT

				&sl mFUNC
				&kp SPACE 
				&sl mPRG
				&sl mPFUNC
				&sl mNR
				&sl mMOD
			>;
		};




		// ------------------------------------------------------------------------------------------------------------------
		//					WINDOWS
		// ------------------------------------------------------------------------------------------------------------------


		
		
		// ------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------
	};		
};




                
                



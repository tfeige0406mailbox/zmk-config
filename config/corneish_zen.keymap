
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// MAC

#define mCHAR 0
#define mNR 1

#define mSYM 2
#define mSSYM 3

#define mPFUNC 4
#define mSPFUNC 5

#define mPRG 6
#define mSPRG 7

#define mFUNC 8
#define mSFUNC 9

#define mMOD 10
#define mSMOD 11
#define mSSMOD 12

#define mNAV 13



// WINDOWS

#define wCHAR 14
#define wNR 15

#define wSYM 16
#define wSSYM 17

#define wPFUNC 18
#define wSPFUNC 19

#define wPRG 20
#define wSPRG 21

#define wFUNC 22
#define wSFUNC 23

#define wMOD 24
#define wSMOD 25
#define wSSMOD 26

#define wNAV 27




/ {
  
  	chosen {
    	zmk,matrix_transform = &default_transform;
    	//zmk,matrix_transform = &five_column_transform;
  	};
  


	// LAYOUT WECHSEL

    macros {
        swleft: SwitchLeft {
            label = "SwitchLeft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(LA(LC(LS(LEFT))))>
                ;
        };
    };

  	macros {
        swright: SwitchRight {
            label = "SwitchRight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&kp LG(LA(LC(LS(RIGHT))))>
                ;
        };
    };

	macros {
        swcraft: SwitchCraft {
            label = "SwitchCraft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N0)>
                ;
        };
    };


	macros {
        swrocket: SwitchRocket {
            label = "SwitchRocket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N7)>
                ;
        };
    };


	macros {
        swswyx: SwitchSwyx {
            label = "SwitchSwyx";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N9)>
                ;
        };
    };

	macros {
        swbrowser: SwitchBrowser {
            label = "SwitchBrowser";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N8)>
                ;
        };
    };



	// WINDOW MOVEMENT

    macros {
        windowleft: windowleft {
            label = "windowleft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp LEFT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        windowright: windowright {
            label = "windowright";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp RIGHT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        windowup: windowup {
            label = "windowup";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp UP>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        windowdown: windowdown {
            label = "windowdown";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp DOWN>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        controlpgup: controlpgup {
            label = "controlpgup";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>
                , <&macro_tap &kp PG_UP>
				, <&macro_wait_time 500>
                , <&macro_release &kp LCTL>
                ;
        };
    };

	macros {
        controlpgdn: controlpgdn {
            label = "controlpgdn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>
                , <&macro_tap &kp PG_DN>
				, <&macro_wait_time 500>
                , <&macro_release &kp LCTL>
                ;
        };
    };




    // PROGRAMM SELECT

	macros {
        p1: p1 {
            label = "p1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp N1>
				, <&macro_wait_time 250>
				, <&macro_release &kp N1>
				, <&macro_wait_time 750>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        p2: p2 {
            label = "p2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp N2>
				, <&macro_wait_time 350>
				, <&macro_release &kp N2>
				, <&macro_wait_time 750>
                , <&macro_release &kp LGUI>
                ;
        };
    };

	macros {
        p3: p3 {
            label = "p3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp N3>
				, <&macro_wait_time 450>
				, <&macro_release &kp N3>
				, <&macro_wait_time 750>
                , <&macro_release &kp LGUI>
                ;
        };
    };
};





// ------------------------------------------------------------------------------------------------------------------
//					 MAC
// ------------------------------------------------------------------------------------------------------------------





/ {

	keymap
	{	
		compatible = "zmk,keymap";
		

		// --------------------------------------
		// Layer 0 - mChar = 	  Buchstaben	
		// --------------------------------------
	
		mac_buchstaben
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp J 
				&kp D	 
				&kp U
				&kp A
				&kp X
				&kp P
				&kp H
				&kp L
				&kp M
				&kp W
				&kp BSPC
	
				&sl mNAV
				&kp C
				&kp T
				&kp I
				&kp E
				&kp O
				&kp B
				&kp N
				&kp R
				&kp S
				&kp G
				&kp RET
	
				&kp LSHIFT
				&kp F
				&kp V
				&kp MINUS
				&kp Y
				&kp Q
				&kp Z
				&kp SEMI
				&kp LBKT
				&kp SQT
				&kp K
				&kp LSHIFT

				&sl mFUNC
				&kp SPACE 
				&sl mPRG
				&sl mSYM
				&sl mNR
				&sl mMOD
			>;
		};


		// --------------------------------------
		// Layer 1 - mNR = 	  Zahlen	
		// --------------------------------------

		mac_zahlen
		{
			label = "MAC-NR";

			bindings = <

				&kp ESC	
				&kp LS(N3)
				&kp NUBS
				&kp LS(NUBS)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp LA(E)
				&kp LA(M)
				&kp M
				&kp LS(N5)			
				&kp BSPC

				&sl mNAV
				&kp N1				
				&kp N2				
				&kp N3				
				&kp N4					
				&kp N5				
				&kp N6				
				&kp N7				
				&kp N8				
				&kp N9				
				&kp N0				
				&kp ENTER 

				&sl LSHIFT
				&kp LS(N7)
				&kp LS(N8)
				&kp LS(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(N2)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp SLASH		
				&sl LSHIFT
		
				&sl mFUNC
				&kp SPACE 
				&sl mPRG
				&sl mPFUNC						
				&sl mSYM
				&sl mMOD
			>;		
		};



		// --------------------------------------
		// Layer 2 - mSYM =	Symoble
		// --------------------------------------

		mac_symbole
		{
			label = "MAC";

			bindings = <
				
				&kp ESC	
				&kp LS(N3)
				&kp NUBS
				&kp LS(NUBS)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp LA(E)
				&kp LA(M)
				&kp M
				&kp LS(N5)			
				&kp BSPC

				&trans
				&kp LA(N7)				
				&kp LA(N)				
				&kp GRAVE				
				&kp LA(N)					
				&kp EQUAL				
				&kp LS(N6)				
				&kp LS(N1)				
				&kp LS(DOT)				
				&kp LS(COMMA)	
				&kp LS(MINUS)				
				&none

				&to mNR
				&kp LS(N7)
				&kp LS(N8)
				&kp LS(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(N2)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp SLASH		
				&to mCHAR
		
				&none 
				&kp SPACE 
				&none 
				&none 
				&sl mSSYM
				&none
			>;
		};





		// --------------------------------------
		// Layer 3 - mSSYM =	Special Symbole
		// --------------------------------------

		mac_specialsonderzeichen
		{
			label = "MAC";

			bindings = <

				&kp ESC	
				&kp LS(N3)
				&kp NUBS
				&kp LA(N8)			
				&kp LA(N9)			
				&kp X
				&kp LS(N4)
				&kp LA(E)
				&kp LA(M)
				&kp M
				&kp LS(N5)			
				&kp BSPC

				&trans
				&kp LA(N7)				
				&kp LA(N)				
				&kp LS(GRAVE)
				&kp LA(N)					
				&kp LS(EQUAL)				
				&kp LS(N6)				
				&kp LS(N1)				
				&kp LS(DOT)				
				&kp LS(COMMA)	
				&kp LS(MINUS)				
				&none

				&to mNR
				&kp LS(LA(N7))
				&kp LA(N8)
				&kp LA(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(NUHS)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp LS(SLASH)	
				&to mCHAR

				&none 
				&kp SPACE 
				&none			
				&none
				&trans
				&none
			>;
		};



		// ------------------------------------------------------------------------------------------------------------------
		//					WINDOWS
		// ------------------------------------------------------------------------------------------------------------------














		// ------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------
	};		
};




                
                



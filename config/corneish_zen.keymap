
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// MAC

#define mCHAR 0
#define mNR 1

#define mSYM 2
#define mSSYM 3

#define mPRG 4
#define mSPRG 5

#define mFUNC 6
#define mSFUNC 7

#define mMOD 8
#define mSMOD 9			

#define mNAV 10
#define mNAV2 11



// WINDOWS

#define wCHAR 12
#define wNR 13

#define wSYM 14
#define wSSYM 15

#define wPRG 16
#define wSPRG 17

#define wFUNC 18
#define wSFUNC 19

#define wMOD 20
#define wSMOD 21

#define wZMOD 22
#define wFMOD 23
#define wALT 24
 
#define wNAV 25
#define wNAV2 26




// Both

#define moNR 27


/ {
  
  	chosen {
    	zmk,matrix_transform = &default_transform;
    	//zmk,matrix_transform = &five_column_transform;
  	};


    macros {


		// --- Left and Right ---


        swleft: SwitchLeft {				
            label = "SwitchLeft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(LA(LC(TAB)))>		// zum ersten Desk
                ;
        };
		swright: SwitchRight {
            label = "SwitchRight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&kp LG(LA(LC(RIGHT)))> 	// einen rechts
                ;
        };



		// --- Windows Window Move ---
		 
		windowleft: windowleft {
            label = "windowleft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp LEFT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };

		windowright: windowright {
            label = "windowright";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp RIGHT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };

		 windowup: windowup {
            label = "windowup";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp UP>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };

		windowdown: windowdown {
            label = "windowdown";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp DOWN>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };	
    };

	behaviors {

    	skq: sticky_key_quick_release {
        	compatible = "zmk,behavior-sticky-key";
        	label = "STICKY_KEY_QUICK_RELEASE";
        	#binding-cells = <1>;
        	bindings = <&kp>;
        	release-after-ms = <5000>;
        	quick-release;
    	}; 
	};
};


&sl {
   	release-after-ms = <2000>;
};

&mt {
    tapping-term-ms = <160>;
};




// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------
//					 ~  MAC  ~
// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------


/ {
	keymap
	{	
		compatible = "zmk,keymap";
		

		// --------------------------------------
		// Layer 0 - mChar = 	  Buchstaben	
		// --------------------------------------
	
		mac_buchstaben
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp J 
				&kp D	 
				&kp U
				&kp A
				&kp X
				&kp P
				&kp H
				&kp L
				&kp M
				&kp W
				&kp BSPC
	
				&kp DEL
				&kp C
				&kp T
				&kp I
				&kp E
				&kp O
				&kp B
				&kp N
				&kp R
				&kp S
				&kp G
				&kp RET
	
				&kp LSHIFT
				&kp F
				&kp V
				&kp MINUS
				&kp Y
				&kp Q
				&kp Z
				&kp SEMI
				&kp LBKT
				&kp SQT
				&kp K
				&kp LSHIFT

				&sl mFUNC
				&kp SPACE
				&sl mNAV
				&sl mPRG
				&sl mNR
				&sl mMOD
			>;
		};
	

		// --------------------------------------
		// Layer 1 - mNR = 	  Zahlen	
		// --------------------------------------

		mac_zahlen
		{
			label = "MAC";

			bindings = <

				&kp ESC	
				&kp LS(N3)
				&kp NUBS
				&kp LS(NUBS)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp LA(E)
				&kp LA(M)
				&kp M
				&kp LS(N5)			
				&kp BSPC

				&kp DEL
				&kp N1				
				&kp N2				
				&kp N3				
				&kp N4					
				&kp N5				
				&kp N6				
				&kp N7				
				&kp N8				
				&kp N9				
				&kp N0				
				&kp ENTER 

				&kp LGUI
				&kp LS(N7)
				&kp LS(N8)
				&kp LS(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(N2)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp SLASH		
				&kp LGUI
		
				&none
				&none
				&none
				&none
				&sl mSYM
				&sl LALT
			>;		
		};



		// --------------------------------------
		// Layer 2 - mSYM =	Symoble
		// --------------------------------------

		mac_symbole
		{
			label = "MAC";

			bindings = <
				
				&kp LG(LC(SPACE))   		// Sonderzeichen
				&kp LS(N3)
				&kp NUBS
				&kp LS(NUBS)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp LA(E)
				&kp LA(M)
				&kp M
				&kp LS(N5)			
				&kp BACKSPACE

				&kp GRAVE					// quadrat alt
				&kp LA(N7)				
				&kp LA(N)				
				&kp GRAVE				
				&kp LA(N)					
				&kp LS(N6)	
				&kp EQUAL		
				&kp LS(N1)		
				&kp LS(COMMA)	
				&kp LS(DOT)				
				&kp LS(MINUS)				
				&kp ENTER

				&kp LSHIFT
				&kp LS(N7)
				&kp LS(N8)
				&kp LS(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(N2)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp SLASH		
				&kp LSHIFT
		
				&none
				&none
				&none
				&none
				&sl mSSYM
				&none
			>;
		};



		// --------------------------------------
		// Layer 3 - mSSYM =	Special Symbole
		// --------------------------------------

		mac_specialsonderzeichen
		{
			label = "MAC";

			bindings = <

				&kp LG(LC(SPACE))   		// Sonderzeichen
				&kp LS(N3)
				&kp LA(N5)
				&kp LA(N6)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp LA(E)
				&kp LA(M)
				&kp M
				&kp LS(N5)			
				&kp BACKSPACE

				&kp GRAVE					// quadrat alt
				&kp LA(N7)				
				&kp LA(N)				
				&kp LS(GRAVE)
				&kp LA(N)					
				&kp LS(N6)				
				&kp LS(EQUAL)	
				&kp LS(N1)				
				&kp LS(COMMA)	
				&kp LS(DOT)				
				&kp LS(MINUS)				
				&kp ENTER

				&kp LSHIFT
				&kp LS(LA(N7))
				&kp LA(N8)
				&kp LA(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(NUHS)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp LS(SLASH)	
				&kp LSHIFT

				&none
				&none
				&none
				&none
				&none
				&none
			>;
		};	



		// --------------------------------------
		// Layer 4 - mPRG =	Programme
		// --------------------------------------


		mac_programme
		{
			label = "MAC";

			bindings = <

				&kp LG(H)					// Hide
				&kp LG(LA(LS(N1)))
				&kp LG(LA(LS(N2)))
				&kp LG(LA(LS(N3)))
				&kp LG(LA(LS(N4)))
				&kp LG(LA(LS(N5)))
				&kp LG(LA(LS(N6)))
				&kp LG(LA(LS(N7)))
				&kp LG(LA(LS(N8)))
				&kp LG(LA(LS(N9)))
				&kp LG(LA(LS(N0)))
				&kp LG(Q) 					// Quit

				&kp LG(LC(LA(UP)))			// Mission Control All
				&kp LG(LA(N1))
				&kp LG(LA(N2))
				&kp LG(LA(N3))
				&kp LG(LA(N4))
				&kp LG(LA(N5))
				&kp LG(LA(N6))
				&kp LG(LA(N7))
				&kp LG(LA(N8))
				&kp LG(LA(N9))
				&kp LG(LA(N0))
				&kp LG(TAB)					// Letztes Programm

				&kp LSHIFT					
				&kp LC(LA(C))
				&kp LC(LA(T))
				&kp LC(LA(I))
				&kp LC(LA(E))
				&kp LC(LA(O))
				&kp LC(LA(B))
				&kp LC(LA(N))
				&kp LC(LA(R))
				&kp LC(LA(S))
				&kp LC(LA(G))
				&kp LSHIFT
		
				&none
				&none
				&none
				&sl mSPRG
				&skq LSHIFT
				&none
			>;
		};


		// --------------------------------------
		// Layer 5 - mSPRG =	Spezial Prgramme
		// --------------------------------------


		mac_sprogramme
		{

			label = "MAC";

			bindings = <

				&kp LG(LA(H))					// Hard Hide
				&kp LG(LA(LC(LS(N1)))) 			
				&kp LG(LA(LC(LS(N2))))
				&kp LG(LA(LC(LS(N3))))
				&kp LG(LA(LC(LS(N4))))
				&kp LG(LA(LC(LS(N5))))
				&kp LG(LA(LC(LS(N6))))
				&kp LG(LA(LC(LS(N7))))
				&kp LG(LA(LC(LS(N8))))
				&kp LG(LA(LC(LS(N9))))
				&kp LG(LA(LC(LS(N0))))
				&kp LG(LA(ESC))					// Hard Quit
		
				&kp LA(LG(LC(DOWN))) 			// Mission Control Prg
				&kp LG(LA(LC(N1)))
				&kp LG(LA(LC(N2)))
				&kp LG(LA(LC(N3)))
				&kp LG(LA(LC(N4)))
				&kp LG(LA(LC(N5)))
				&kp LG(LA(LC(N6)))
				&kp LG(LA(LC(N7)))
				&kp LG(LA(LC(N8)))
				&kp LG(LA(LC(N9)))
				&kp LG(LA(LC(N0)))
				&kp LA(LG(LC(LS(F1)))) 			// PRG swap alt (hyper open)

				&kp LSHIFT
				&kp LC(LA(LS(C)))
				&kp LC(LA(LS(T)))
				&kp LC(LA(LS(I)))
				&kp LC(LA(LS(E)))
				&kp LC(LA(LS(O)))
				&kp LC(LA(LS(B)))
				&swleft 						// OS Swap
				&kp LC(LA(LS(R)))				
				&kp LC(LA(LS(S)))
				&swright 						// OS Swap
				&kp LSHIFT				
		
				&none
				&none
				&none
				&none
				&none
				&none
			>;
		};


		// --------------------------------------
		// Layer 6 - mFUNC =	Funktionen
		// --------------------------------------

		mac_function
		{
			label = "MAC";

			bindings = <
	
				&kp LG(LS(T))				// Craft Ausklappen
				&kp LG(LS(P))				// Craft Format (Seite)
				&kp LG(LS(SLASH))			// Craft Format (Durch)
				&kp LG(LS(NUHS))			// Craft Format (Focus)
				&kp LG(LS(EQUAL))			// Craft Format (Block)
				&kp LG(LC(LA(F13)))   		// Open Meh 
				&kp LG(LC(LA(F14)))   		// Open Meh 
				&kp LG(LA(F19))				// Window Swap
				&kp LG(LC(UP))			    // Window Move
				&kp LG(LA(F20))				// Window Swap
				&kp LG(RBKT)				// Plus +
				&kp LG(LC(Q))				// Sperren 
				
				&kp LS(DEL)					// Delete Special
				&kp LG(LS(B))				// Craft Format
				&kp LG(U) 					// Craft Format
				&kp LG(B) 					// Craft Format
				&kp LG(I)					// Craft Format
				&kp LG(LS(C))				// Craft Format
				&kp LG(LC(LA(NUHS)))   		// Screenshot
				&kp LG(LC(LEFT))			// Window Move
				&kp LG(LC(DOWN))			// Window Move
				&kp LG(LC(RIGHT))			// Window Move
				&kp LG(SLASH)				// Minus -
				&kp INSERT

				&kp LSHIFT
				&kp C_PREVIOUS 
				&kp C_PP 
				&kp C_PP 
				&kp C_NEXT 
				&kp LG(LC(LA(F15)))   		// Open Meh 
				&kp LG(LC(LA(F16)))   		// Open Meh 
				&kp C_VOLUME_DOWN 
				&kp C_MUTE
				&kp C_MUTE
				&kp C_VOLUME_UP 
				&kp LSHIFT					
				
				&sl mSFUNC
				&none
				&none
				&none
				&kp LSHIFT 
				&none
			>;
		};

		// --------------------------------------
		// Layer 7 - mSFUNC =	Spezial Funktionen
		// --------------------------------------

		mac_specialfunction
		{
			label = "MAC";

			bindings = <

				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&kp LG(LA(F21))				// Window deep
				&kp LG(LA(F16))				// Window Control
				&kp LG(LA(F22))				// Window deep
				&kp LG(LA(F17))				// Window size
				&kp LC(LG(LS(ESC)))			// Herunterfahren

				&kp LG(LA(LC(Y)))			// drehen
				&kp LC(N5)					// Craft Format 
				&kp LC(N4)					// Craft Format 
				&kp LC(N3)					// Craft Format 
				&kp LC(N2)					// Craft Format 
				&kp LC(N1)					// Craft Format 
				&trans
				&kp LG(LA(F13))				// Window Control 
				&kp LG(LA(F14))				// Window Control
				&kp LG(LA(F15))				// Window Control
				&kp LG(LA(F18))				// Window Size
				&kp LG(LA(LC(Z)))			// drehen

				&kp LSHIFT
				&kp LG(LA(C)) 				// Format Kopieren
				&kp LG(LA(V)) 				// Format Einfügen
				&trans
				&trans
				&trans
				&trans
				&kp LG(LA(LC(PG_UP)))		// Bright
				&kp LG(LA(PG_UP))			// Slow Bright
				&kp LG(LA(PG_DN))			// Slow Bright 
				&kp LG(LA(LC(PG_DN)))		// Bright
				&kp LSHIFT
		
				&none
				&none
				&none
				&none
				&none
				&none            
			>;
		};



		// --------------------------------------
		// Layer 8 - mMOD =	GUI
		// --------------------------------------

		mac_mod
		{
			label = "MAC";

			bindings = <

				&kp LG(Y)					// Zurück
				&kp LG(J)
				&kp LG(D)
				&kp LG(U) 
				&kp LG(A)
				&kp LG(X)
				&kp LG(P)
				&kp LG(H)
				&kp LG(L) 
				&kp LG(M)
				&kp LG(W) 
				&kp LA(BACKSPACE)			// Wort enfternen
		
				&kp LA(DELETE)				// Wort entfernen
				&kp LG(C)
				&kp LG(T)
				&kp LG(I)
				&kp LG(E)
				&kp LG(O)	
				&kp LG(B)
				&kp LG(N)
				&kp LG(R)
				&kp LG(S)
				&kp LG(G)
				&kp LG(ENTER)				// Enter Mod	

				&kp LSHIFT
				&kp LG(F)
				&kp LG(V)
				&kp LG(MINUS)
				&kp LG(Y)
				&kp LG(Q)
				&kp LG(Z)
				&kp LG(SEMICOLON)
				&kp LG(LEFT_BRACKET)
				&kp LG(SINGLE_QUOTE)
				&kp LG(K) 
				&kp LSHIFT				
		
				&none
				&kp LG(SPACE)
				&none
				&none
				&none
				&sl mSMOD
			>;
		};



		// --------------------------------------
		// Layer 9 - mSMOD =	Spezial GUI
		// --------------------------------------

		mac_smod
		{	
			label = "MAC";

			bindings = <
			
				&kp LS(LG(Y))					// Wiederholen
				&kp LA(LG(LC(J)))
				&kp LA(LG(LC(D)))
				&kp LA(LG(LC(U)))
				&kp LA(LG(LC(A)))
				&kp LA(LG(LC(X)))
				&kp LA(LG(LC(P)))
				&kp LA(LG(LC(H))) 
				&kp LA(LG(LC(L))) 
				&kp LA(LG(LC(M)))
				&kp LA(LG(LC(W)))
				&kp LG(BACKSPACE)			// Zeile enfternen
		
				&kp LG(DELETE)				// Zeile entfernen 
				&kp LA(LG(LC(C)))
				&kp LA(LG(LC(T)))
				&kp LA(LG(LC(I)))
				&kp LA(LG(LC(E)))
				&kp LA(LG(LC(O)))
				&kp LA(LG(LC(B)))
				&kp LA(LG(LC(N)))
				&kp LA(LG(LC(R)))
				&kp LA(LG(LC(S)))
				&kp LA(LG(LC(G)))
				&kp LA(LG(ENTER))			// Enter Mod

				&kp LSHIFT
				&kp LA(LG(LC(F)))
				&kp LA(LG(LC(V)))
				&kp LA(LG(LC(MINUS)))
				&kp LA(LG(LC(Y)))
				&kp LA(LG(LC(Q)))
				&kp LA(LG(LC(Z)))
				&kp LA(LG(LC(SEMICOLON)))
				&kp LA(LG(LC(LEFT_BRACKET)))
				&kp LA(LG(LC(SINGLE_QUOTE)))
				&kp LA(LG(LC(K)))
				&kp LSHIFT

				&none
				&none
				&none
				&none
				&none
				&none
			>;
		};


		// --------------------------------------
		// Layer = 10 - mNAV - Navigation
		// -------------------------------------

		mac_navigation
		{		
			label = "MAC";

			bindings = <

				&kp ESC
				&kp LG(LA(LC(F12)))		  	// open Pfad
				&kp LG(LA(LC(F6)))		  	// open
				&kp LG(LA(LC(F7)))		  	// open
				&kp LG(LA(LC(F8)))		  	// open bestätigen
				&kp LG(LA(LC(F9)))		  	// Clipboard History
				&kp LG(HOME)				// Home Sprung
				&kp HOME	 				// Home 
				&kp UP						// 
				&kp END						// End
				&kp PG_UP 					// 
				&kp BACKSPACE				// 

				&kp DEL 					//
				&kp LG(LA(LC(F10)))		  	// Pfadsuche
				&kp LG(LA(LC(F11)))		  	// Umbennen
				&kp LGUI					// 
				&kp LCTL					// 
				&kp LG(LA(LC(F5)))		  	// Fokus
				&kp LG(END) 				// End Sprung
				&kp LEFT 					// 
				&kp DOWN					//
				&kp RIGHT 					//
				&kp PG_DN					//
				&kp ENTER					//
				
				&kp LSHIFT					//
				&kp LG(LA(LC(F1)))		  	// Seitenleiste links
				&kp LG(LA(LC(F2)))		  	// Pfad zurück
				&kp LG(LA(LC(F3)))		  	// Pfad vor
				&kp LG(LA(LC(F4)))		  	// Seitenleiste rechts
				&kp LG(F)
				&kp LG(LA(LC(GRAVE)))	  	// Kontext Menü
				&kp LS(TAB)					// zurück
				&kp LA(LEFT)				// Wort Sprung
				&kp LA(RIGHT)				// Wort Sprung
				&kp TAB						// vor
				&kp LSHIFT					//

				&none
				&kp LG(LA(LC(F18)))		  	// Shortcat
				&sl mNAV2
				&kp LG(SPACE)
				&mo moNR
				&none
			>;
		};

		// --------------------------------------
		// Layer = 11 - mNAV2 - Navigation
		// -------------------------------------

		mac_navigation2
		{		
			label = "MAC";

			bindings = <

				&kp ESC
				&kp LG(LA(LC(F19)))		  	// Open
				&kp LG(LA(LC(F20)))		  	// Open
				&kp LG(LA(LC(F21)))		  	// Open
				&kp LG(LA(LC(F22)))		  	// Open
				&trans
				&kp LG(LS(HOME))			// Home Sprung
				&kp LS(HOME) 				// Home 
				&kp LS(UP)					// 
				&kp LS(END)					// End
				&kp LC(PG_UP) 				// 
				&kp BACKSPACE				// 

				&kp DEL 					//
				&trans
				&trans
				&trans
				&kp LCTL					//
				&kp LG(LA(LC(F13)))		  	// Deep Fokus
				&kp LG(LS(END)) 			// End Sprung Markierung
				&kp LS(LEFT) 				// 
				&kp LS(DOWN)				//
				&kp LS(RIGHT) 				//
				&kp LC(PG_DN)				//
				&kp ENTER					//
	
				&kp LSHIFT
				&kp LG(LA(LC(F14)))		  	// Open
				&kp LG(LA(LC(F15)))		  	// Zurück History 
				&kp LG(LA(LC(F16)))		  	// Vor History
				&kp LG(LA(LC(F17)))		  	// Open
				&trans
				&kp LG(LA(LC(GRAVE)))	  	// Kontext Menü
				&kp LS(LC(TAB))				// zurück
				&kp LA(LS(LEFT))			// Wort Sprung
				&kp LA(LS(RIGHT))			// Wort Sprung
				&kp LC(TAB)					// vor
				&kp LSHIFT

				&none
				&kp LG(LA(LC(F18)))		  	// Shortcat
				&trans
				&kp LG(LA(LC(SPACE)))	 	// Maestro Spotlight
				&mo moNR
				&none
			>;
		};

	
		
		// -----------------------------------------------------------------------------------------------------------------
		// -----------------------------------------------------------------------------------------------------------------
		//				~	WINDOWS   ~
		// ------------------------------------------------------------------------------------------------------------------
		// -----------------------------------------------------------------------------------------------------------------


		// --------------------------------------
		// Layer 12 - mCHAR = 	  Buchstaben	
		// --------------------------------------
	
		win_buchstaben
		{
			label = "win";

			bindings = <

				&kp ESC
				&kp J 
				&kp D	 
				&kp U
				&kp A
				&kp X
				&kp P
				&kp H
				&kp L
				&kp M
				&kp W
				&kp BSPC
	
				&kp DEL
				&kp C
				&kp T
				&kp I
				&kp E
				&kp O
				&kp B
				&kp N
				&kp R
				&kp S
				&kp G
				&kp RET
	
				&kp LSHIFT
				&kp F
				&kp V
				&kp MINUS
				&kp Y
				&kp Q
				&kp Z
				&kp SEMI
				&kp LBKT
				&kp SQT
				&kp K
				&kp LSHIFT

				&sl wFUNC
				&kp	SPACE 
				&sl wNAV
				&sl wPRG
				&sl wNR
				&sl wMOD
			>;
		};



		// --------------------------------------
		// Layer 13 - mNR = 	  Zahlen	
		// --------------------------------------

		win_zahlen
		{
			label = "WIN";

			bindings = <

				&kp ESC	
				&kp LS(N3)
				&kp NUBS
				&kp LS(NUBS)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp RA(E)
				&kp RA(M)
				&kp M
				&kp LS(N5)			
				&kp BSPC

				&kp DEL
				&kp N1				
				&kp N2				
				&kp N3				
				&kp N4					
				&kp N5				
				&kp N6				
				&kp N7				
				&kp N8				
				&kp N9				
				&kp N0				
				&kp ENTER 

				&kp LSHIFT
				&kp LS(N7)
				&kp LS(N8)
				&kp LS(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(N2)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp SLASH		
				&kp LSHIFT
		
				&none
				&none
				&none
				&none
				&sl wSYM
				&sk LALT 		
			>;		
		};




		// --------------------------------------
		// Layer 14 - mSYM =	Symoble
		// --------------------------------------

		win_symbole
		{
			label = "WIN";

			bindings = <
				
				&kp LG(DOT)
				&kp LS(N3)
				&kp NUBS
				&kp LS(NUBS)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp RA(E)
				&kp RA(M)
				&kp M
				&kp LS(N5)			
				&kp BACKSPACE

				&kp RA(N2)
				&kp RA(NUBS)				
				&kp RA(RBKT)				
				&kp GRAVE				
				&kp RA(Q)					
				&kp LS(N6)				
				&kp EQUAL	
				&kp LS(N1)				
				&kp LS(COMMA)				
				&kp LS(DOT)	
				&kp LS(MINUS)				
				&kp ENTER

				&kp LSHIFT
				&kp LS(N7)
				&kp LS(N8)
				&kp LS(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(N2)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp SLASH		
				&kp LSHIFT
		
				&none
				&none
				&none
				&none
				&sl wSSYM
				&none
			>;
		};




		// --------------------------------------
		// Layer 15 - mSSYM =	Special Symbole
		// --------------------------------------

		win_specialsonderzeichen
		{
			label = "WIN";

			bindings = <

				&kp LG(DOT)
				&kp LS(N3)
				&kp RA(N8)
				&kp RA(N9)
				&kp NUHS	
				&kp X
				&kp LS(N4)
				&kp RA(E)
				&kp RA(M)
				&kp M
				&kp LS(N5)			
				&kp BACKSPACE

				&kp RA(N3)
				&kp RA(NUBS)				
				&kp RA(RBKT)				
				&kp LS(GRAVE)
				&kp RA(Q)						
				&kp LS(N6)				
				&kp LS(EQUAL)
				&kp LS(N1)				
				&kp LS(COMMA)	
				&kp LS(DOT)				
				&kp LS(MINUS)				
				&kp ENTER

				&kp LSHIFT
				&kp RA(MINUS)
				&kp RA(N7)
				&kp RA(N0)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(NUHS)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp LS(SLASH)	
				&kp LSHIFT

				&none
				&none
				&none
				&none
				&none
				&none
			>;
		};



		// --------------------------------------
		// Layer 16 - mPRG =	Programme
		// --------------------------------------

		win_programme
		{
			label = "WIN";

			bindings = <

				&kp LA(SPACE)
				&kp LA(N1)
				&kp LA(N2)
				&kp LA(N3)
				&kp LA(N4)
				&kp LA(N5)
				&kp LA(N6)
				&kp LA(N7)
				&kp LA(N8)
				&kp LA(N9)
				&kp LA(N0)
				&kp LA(F4)

				&kp LG(TAB)
				&kp LG(LC(N1))
				&kp LG(LC(N2))
				&kp LG(LC(N3))
				&kp LG(LC(N4))
				&kp LG(LC(N5))
				&kp LG(LC(N6))
				&kp LG(LC(N7))
				&kp LG(LC(N8))
				&kp LG(LC(N9))
				&kp LG(LC(N0))
				&kp LA(TAB)

				&kp LSHIFT
				&kp LA(LS(N1))
				&kp LA(LS(N2))
				&kp LA(LS(N3))
				&kp LA(LS(N4))
				&kp LA(LS(N5))
				&kp LA(LS(N6))
				&kp LA(LS(N7))
				&kp LA(LS(N8))
				&kp LA(LS(N9))
				&kp LA(LS(N0))
				&kp LSHIFT
		
				&none
				&none
				&none
				&sl wSPRG
				&none
				&none
			>;
		};


		// --------------------------------------
		// Layer 17 -	mSPRG =	Spezial Prgramme
		// --------------------------------------


		win_sprogramme
		{

			label = "WIN";

			bindings = <

				&kp LG(D)
				&kp LA(N1)
				&kp LA(N2)
				&kp LA(N3)
				&kp LA(N4)
				&kp LA(N5)
				&kp LA(N6)
				&kp LA(N7)
				&kp LA(N8)
				&kp LA(N9)
				&kp LA(N0)
				&kp LC(LS(ESC))
		
				&kp LG(T)
				&kp LG(LC(N1))
				&kp LG(LC(N2))
				&kp LG(LC(N3))
				&kp LG(LC(N4))
				&kp LG(LC(N5))
				&kp LG(LC(N6))
				&kp LG(LC(N7))
				&kp LG(LC(N8))
				&kp LG(LC(N9))
				&kp LG(LC(N0))
				&kp LG(PG_DN)					// 

				&kp LSHIFT
				&kp LA(LS(N1))
				&kp LA(LS(N2))
				&kp LA(LS(N3))
				&kp LA(LS(N4))
				&kp LA(LS(N5))
				&kp LA(LS(N6))
				&swleft
				&kp LA(LS(N8))
				&kp LA(LS(N9))
				&swright
				&kp LSHIFT
		
				&none 
				&none
				&none
				&none
				&none
				&none

			>;
		};


		// --------------------------------------
		// Layer 18 - mFUNC =	Funktionen
		// --------------------------------------

		win_function
		{
			label = "WIN";

			bindings = <
	
				&kp LC(LA(T))					// Craft ausklappen
				&kp LC(LS(P))					// Craft
				&kp LC(LS(S))					// Craft
				&kp LC(LS(SINGLE_QUOTE))		// Craft
				&kp LC(LS(NUHS))				// Craft
				&kp LA(LS(F13))
				&kp LA(LS(F14))
				&kp LA(LC(LG(N1)))
				&windowup					    // window up
				&kp LA(LC(LG(N2)))
				&kp LC(KP_PLUS)
				&kp LG(L)						// Sperren
		
				&kp LS(DEL)
				&kp LC(LS(B)) 
				&kp LC(LS(U)) 
				&kp LC(LS(F)) 
				&kp LC(LS(K))
				&kp LC(LS(C)) 
				&kp LS(LG(S))                   // Screenshot
				&windowleft					    // window
				&windowdown 				    // window
				&windowright 				    // window
				&kp LC(KP_MINUS)
				&kp INSERT
				
				&kp LSHIFT
				&kp C_PREVIOUS 
				&kp C_PP 
				&kp C_PP 
				&kp C_NEXT    
				&kp LA(LS(F15))
				&kp LA(LS(F16))
				&kp C_VOLUME_DOWN 
				&kp C_MUTE
				&kp C_MUTE
				&kp C_VOLUME_UP 
				&kp LSHIFT
				
				&sl wSFUNC
				&none
				&none
				&none
				&kp LSHIFT
				&none
			>;
		};



		// --------------------------------------
		// Layer 19 - mSFUNC =	Spezial Funktionen
		// --------------------------------------

		win_specialfunction
		{
			label = "WIN";

			bindings = <

				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&kp LA(LC(LG(N3)))
				&trans
				&kp LA(LC(LG(N4)))
				&trans
				&kp LG(X) 						// Herunterfahren
		
				&kp LC(LS(Y))					// drehen
				&kp LC(LS(N5))
				&kp LC(LS(N4))
				&kp LC(LS(N3))
				&kp LC(LS(N2))
				&kp LC(LS(N1))
                &trans
				&trans
				&trans
				&trans
				&trans
				&kp LC(LS(Z))					// drehen

				&kp LSHIFT
				&kp LC(LS(C))					// Craft
				&kp LC(LS(V))					// Craft
				&trans
				&trans
				&trans
				&trans
				&kp LG(LA(LC(PG_UP)))		// Bright
				&kp LG(LA(PG_UP))			// Slow Bright
				&kp LG(LA(PG_DN))			// Slow Bright 
				&kp LG(LA(LC(PG_DN)))		// Bright
				&kp LSHIFT
		
				&none
				&none
				&none
				&none
				&none
				&none
			>;
		};


		// --------------------------------------
		// Layer	20 - mMOD =	CTL
		// --------------------------------------

		win_mod
		{
			label = "win";

			bindings = <

				&kp LC(Y)
				&kp LC(J)
				&kp LC(D)
				&kp LC(U) 
				&kp LC(A)
				&kp LC(X)
				&kp LC(P)
				&kp LC(H)
				&kp LC(L) 
				&kp LC(M)
				&kp LC(W) 
				&kp LC(BACKSPACE)
		
				&kp LC(DEL)
				&kp LC(C)
				&kp LC(T)
				&kp LC(I)
				&kp LC(E)
				&kp LC(O)	
				&kp LC(B)
				&kp LC(N)
				&kp LC(R)
				&kp LC(S)
				&kp LC(G)
				&kp LC(ENTER)

				&kp LSHIFT
				&kp LC(F)
				&kp LC(V)
				&kp LC(MINUS)
				&kp LC(Y)
				&kp LC(Q)
				&kp LC(Z)
				&kp LC(SEMICOLON)
				&kp LC(LEFT_BRACKET)
				&kp LC(SINGLE_QUOTE)
				&kp LC(K) 
				&kp LSHIFT
		
				&none
				&kp LC(SPACE)
				&none
				&none
				&sl wZMOD
				&sl wSMOD
			>;
		};



		// --------------------------------------
		// Layer 21 - mSMOD =	Spezial CTL
		// --------------------------------------

		win_smod
		{	
			label = "WIN";

			bindings = <
			
				&kp LC(Z)
				&kp LS(LC(J))
				&kp LS(LC(D))
				&kp LS(LC(U))
				&kp LS(LC(A))
				&kp LS(LC(X))
				&kp LS(LC(P))
				&kp LS(LC(H)) 
				&kp LS(LC(L)) 
				&kp LS(LC(M)) 
				&kp LS(LC(W)) 
				&kp LS(BACKSPACE)
		
				&kp LS(DELETE)
				&kp LS(LC(C))
				&kp LS(LC(T))
				&kp LS(LC(I))
				&kp LS(LC(E))
				&kp LS(LC(O))	
				&kp LS(LC(B))
				&kp LS(LC(N))
				&kp LS(LC(R))
				&kp LS(LC(S))
				&kp LS(LC(G)) 
				&kp LS(LC(ENTER))

				&kp LSHIFT
				&kp LS(LC(F))
				&kp LS(LC(V))
				&kp LS(LC(MINUS))
				&kp LS(LC(Y))
				&kp LS(LC(Q))
				&kp LS(LC(Z))
				&kp LS(LC(SEMICOLON))
				&kp LS(LC(LEFT_BRACKET))
				&kp LS(LC(SINGLE_QUOTE))
				&kp LS(LC(K)) 
				&kp LSHIFT

				&none
				&kp LS(LC(SPACE))
				&none
				&none
				&sl wFMOD
				&sl wALT
			>;
		};


		// --------------------------------------------
		// Layer 22 - wZMOD =	Zahlen Mod
		// --------------------------------------------

		win_zmod
		{
			label = "WIN";

			bindings = <

				&trans

				&kp LG(L)

				&trans
				&kp LC(N1)
				&kp LC(N2)
				&kp LC(N3)
				&kp LC(N4)
				&kp LC(N5)
				&kp LC(N6)
				&kp LC(N7)
				&kp LC(N8)
				&kp LC(N9)
				&kp LC(N0)
				&trans

				&kp LSHIFT
				&kp F1
				&kp F2
				&kp F3
				&kp F4
				&kp F5
				&kp F6
				&kp F7
				&kp F8
				&kp F9
				&kp F10
				&kp LSHIFT
		
				&none
				&none
				&none
				&none
				&trans
				&none
			>;
		};	



		// --------------------------------------------
		// Layer 23 - wFMOD =	FunctionMod
		// --------------------------------------------

		win_fmod
		{	
			label = "WIN";

			bindings = <
			
				&trans 	
				&kp LC(LA(N1))
				&kp LC(LA(N2))
				&kp LC(LA(N3))
				&kp LC(LA(N4))
				&kp LC(LA(N5))
				&kp LC(LA(N6))
				&kp LC(LA(N7))
				&kp LC(LA(N8))
				&kp LC(LA(N9))
				&kp LC(LA(N0))
				&trans
	
				&trans
				&kp F11
				&kp F12
				&kp F13
				&kp F14
				&kp F15
				&kp F16
				&kp F17
				&kp F18
				&kp F19
				&kp F20
				&trans

				&kp LCTL
				&bt BT_PRV
				&bt BT_SEL 0
				&bt BT_SEL 5
				&bt BT_NXT
				&bt BT_CLR
				&bt BT_CLR 	
				&bt BT_PRV
				&bt BT_SEL 0
				&bt BT_SEL 5
				&bt BT_NXT
				&kp LCTL

				&none
				&none
				&none
				&none
				&trans
				&none
			>;
		}; 



		// --------------------------------------------
		// Layer 24 - wALT
		// --------------------------------------------

		win_alt
		{	
			label = "WIN";

			bindings = <
			
				&kp LA(ESC)
				&kp LA(J)
				&kp LA(D)
				&kp LA(U)
				&kp LA(A)
				&kp LA(X)
				&kp LA(P)
				&kp LA(H)
				&kp LA(L) 
				&kp LA(M)
				&kp LA(W) 
				&kp LG(X)
	
				&kp LA(DEL)
				&kp LA(C)
				&kp LA(T)
				&kp LA(I)
				&kp LA(E)
				&kp LA(O)	
				&kp LA(B)
				&kp LA(N)
				&kp LA(R)
				&kp LA(S)
				&kp LA(G)
				&kp LA(ENTER)

				&kp LSHIFT
				&kp LA(F)
				&kp LA(V)
				&kp LA(MINUS)
				&kp LA(Y)
				&kp LA(Q)
				&kp LA(Z)
				&kp LA(SEMICOLON)
				&kp LA(LEFT_BRACKET)
				&kp LA(SINGLE_QUOTE)
				&kp LA(K) 
				&kp LSHIFT

				&none
				&kp LA(SPACE)
				&none
				&none
				&none
				&trans
			>;
		}; 		



		// --------------------------------------
		// Layer = 25 - wNAV	  Navigation
		// --------------------------------------

		win_navigation
		{		
			label = "WIN";

			bindings = <

				&kp ESC
				&kp LC(LS(O))					// Pfad kopieren
				&kp LS(LA(F8))
				&kp LS(LA(F9))
				&kp F5
				&kp LG(V)						// Clipboard History
				&kp LC(HOME)					// set
				&kp HOME 						// set
				&kp UP							// set
				&kp END							// set
				&kp PG_UP 						// set
				&kp BACKSPACE

				&kp DEL 
				&kp LA(E)
				&kp F2
				&kp LALT
				&kp LCTL						
				&kp LA(LS(F5))					// Fokus
				&kp LC(END)						// set
				&kp LEFT 						// set
				&kp DOWN						// set
				&kp RIGHT 						// set
				&kp PG_DN						// set
				&kp ENTER						
				
				&kp LSHIFT
				&kp LA(LS(F1))
				&kp LA(LS(F2))
				&kp LA(LS(F3))
				&kp LA(LS(F4))
				&kp LA(F)
				&kp LC(LS(F10))					// set 
				&kp LS(TAB)						// set
				&kp LC(LEFT)					// set
				&kp LC(RIGHT)					// set
				&kp TAB							// set
				&kp LSHIFT

				&none
				&kp LALT
				&sl wNAV2
				&kp LG(S)
				&mo moNR
				&none
				
			>;
		};

		// --------------------------------------
		// Layer = 26 - wNAV2	  Navigation
		// --------------------------------------

		win_navigation2
		{		
			label = "WIN";

			bindings = <

				&kp ESC
				&kp LS(LA(F10))
				&kp LS(LA(F11))
				&kp LS(LA(F12))
				&kp LS(LA(F13))
				&kp LG(V)
				&kp LS(LC(HOME))
				&kp LS(HOME)
				&kp LS(UP)
				&kp LS(END)
				&kp LC(PG_UP)
				&kp BACKSPACE

				&kp DEL 
				&kp LS(LA(F14))
				&kp LS(LA(F15))
				&kp LALT
				&kp LCTL						
				&trans
				&kp LC(LS(END))
				&kp LS(LEFT)
				&kp LS(DOWN)
				&kp LS(RIGHT)
				&kp LC(PG_DN)
				&kp ENTER
				
				&kp LCTL
				&trans
				&kp LC(LS(F6))
				&kp LC(LS(F7))
				&trans
				&kp LC(F)
				&kp LC(LS(F10))					// set
				&kp LC(LS(TAB))					// CTL
				&kp LC(LS(LEFT))				// set
				&kp LC(LS(RIGHT))				// set
				&kp LC(TAB)						// CTL
				&kp LCTL						

				&none
				&kp LALT
				&trans
				&kp LA(LG(S))
				&mo moNR
				&none
			>;
		};

  
		
		// ------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------


		// --------------------------------------
		// Layer 27 - modNR = 	  Zahlen	
		// --------------------------------------

		mo_nr
		{
			label = "WIN";

			bindings = <

				&kp ESC	
				&kp LS(N3)
				&kp NUBS
				&kp LS(NUBS)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp RA(E)
				&kp RA(M)
				&kp M
				&kp LS(N5)			
				&kp BSPC

				&kp DEL
				&kp N1				
				&kp N2				
				&kp N3				
				&kp N4					
				&kp N5				
				&kp N6				
				&kp N7				
				&kp N8				
				&kp N9				
				&kp N0				
				&kp ENTER

				&kp LSHIFT
				&kp LS(N7)
				&kp LS(N8)
				&kp LS(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(N2)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp SLASH		
				&kp LSHIFT
		
				&none
				&none
				&none
				&none
				&none
				&none
			>;		
		};


		// ----------
	};		
};


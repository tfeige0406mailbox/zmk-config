
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// MAC

#define mCHAR 0

#define mNAV 1
  
#define mNR 2
#define mSYM 3
#define mSSYM 4

#define mPFUNC 5
#define mSPFUNC 6

#define mPRG 7 
#define mSPRG 8

#define mFUNC 9
#define mSFUNC 10

#define mMOD 11
#define mSMOD 12

#define mNAVosl 13




// WINDOWS

#define wCHAR 14

#define wNAV 15

#define wNR 16
#define wSYM 17
#define wSSYM 18

#define wPFUNC 19
#define wSPFUNC 20

#define wPRG 21
#define wSPRG 22

#define wFUNC 23
#define wSFUNC 24

#define wMOD 25
#define wSMOD 26

#define wNAVosl 27




/ {
  
  	chosen {
    	zmk,matrix_transform = &default_transform;
    	//zmk,matrix_transform = &five_column_transform;
  	};


    macros {


		// --- Left and Right ---

        swleft: SwitchLeft {
            label = "SwitchLeft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(LA(LC(LS(LEFT))))>
                ;
        };
		swright: SwitchRight {
            label = "SwitchRight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&kp LG(LA(LC(LS(RIGHT))))>
                ;
        };



		// --- Windows Window Move ---
		 
		windowleft: windowleft {
            label = "windowleft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp LEFT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };

		windowright: windowright {
            label = "windowright";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp RIGHT>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };

		 windowup: windowup {
            label = "windowup";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp UP>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };

		windowdown: windowdown {
            label = "windowdown";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp DOWN>
				, <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                ;
        };	
    };

	behaviors {

    	skq: sticky_key_quick_release {
        	compatible = "zmk,behavior-sticky-key";
        	label = "STICKY_KEY_QUICK_RELEASE";
        	#binding-cells = <1>;
        	bindings = <&kp>;
        	release-after-ms = <5000>;
        	quick-release;
    	};
	};
};


&sl {
   	release-after-ms = <5000>;
};

&mt {
    tapping-term-ms = <160>;
};




// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------
//					 ~  MAC  ~
// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------


/ {
	keymap
	{	
		compatible = "zmk,keymap";
		

		// --------------------------------------
		// Layer 0 - mChar = 	  Buchstaben	
		// --------------------------------------
	
		mac_buchstaben
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp J 
				&kp D	 
				&kp U
				&kp A
				&kp X
				&kp P
				&kp H
				&kp L
				&kp M
				&kp W
				&kp BSPC
	
				&kp DEL
				&kp C
				&kp T
				&kp I
				&kp E
				&kp O
				&kp B
				&kp N
				&kp R
				&kp S
				&kp G
				&kp RET
	
				&kp LSHIFT
				&kp F
				&kp V
				&kp MINUS
				&kp Y
				&kp Q
				&kp Z
				&kp SEMI
				&kp LBKT
				&kp SQT
				&kp K
				&kp LSHIFT

				&sl mPFUNC
				&lt mNAV SPACE
				&sl mPRG
				&sl mFUNC
				&sl mNR
				&sl mMOD
			>;
		};

		// --------------------------------------
		// Layer = 1 - mNAV	  Navigation
		// --------------------------------------

		mac_navigation
		{		
			label = "MAC";

			bindings = <

				&kp ESC
				&kp LC(PG_UP)				// möglicher Shortcut
				&kp LG(LS(LEFT)) 
				&kp LG(LALT)
				&kp LG(LS(RIGHT)) 
				&kp LG(LS(UP))
				&kp LG(UP)
				&kp LG(LEFT) 
				&kp UP
				&kp LG(RIGHT)
				&kp PG_UP 
				&kp BACKSPACE

				&kp DEL 
				&kp LC(PG_DN)				// möglicher Shortcut
				&kp LSHIFT
				&kp LGUI
				&kp LCTL
				&kp LG(LS(DOWN)) 
				&kp LG(DOWN) 
				&kp LEFT 
				&kp DOWN
				&kp RIGHT 	
				&kp PG_DN
				&kp ENTER
				
				&kp LSHIFT
				&kp LS(LC(TAB))
				&kp LS(LA(LEFT))
				&kp LS(LA(RIGHT))
				&kp LC(TAB)  
				&kp LC(SPACE)				// Excel Function
				&kp LS(SPACE)				// Excel Function
				&kp LS(TAB)
				&kp LA(LEFT)
				&kp LA(RIGHT)
				&kp TAB
				&kp LSHIFT

				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
			>;
		};

	

		// --------------------------------------
		// Layer 2 - mNR = 	  Zahlen	
		// --------------------------------------

		mac_zahlen
		{
			label = "MAC";

			bindings = <

				&kp ESC	
				&kp LS(N3)
				&kp NUBS
				&kp LS(NUBS)			
				&kp NUHS
				&kp X
				&kp LS(N4)
				&kp LA(E)
				&kp LA(M)
				&kp M
				&kp LS(N5)			
				&kp BSPC

				&kp DEL
				&kp N1				
				&kp N2				
				&kp N3				
				&kp N4					
				&kp N5				
				&kp N6				
				&kp N7				
				&kp N8				
				&kp N9				
				&kp N0				
				&kp ENTER 

				&kp LGUI
				&kp LS(N7)
				&kp LS(N8)
				&kp LS(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(N2)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp SLASH		
				&kp LGUI
		
				&trans
				&trans
				&trans
				&trans
				&sl mSYM
				&trans
			>;		
		};

		

		
  
			
		
		// ------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------
	};		
};




                
                





#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {

	
keymap
{
	compatible = "zmk,keymap";


// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------


	// --------------------------------------
	// Layer 0 = 	  Buchstaben	
	// --------------------------------------
	
	mac_buchstaben
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp J 
			&kp D	 
			&kp U
 			&kp A
	 		&kp X
	  		&kp P
 			&kp H
	 		&kp L
	 		&kp M
 			&kp W
 			&kp BSPC
 
			&sl 9
 			&kp C
 			&kp T
			&kp I
			&kp E
			&kp O
 			&kp B
			&kp N
 			&kp R
 			&kp S
 			&kp G
 			&kp RET
 
			&to 1
			&kp F
	 		&kp V
 			&kp MINUS
 			&kp Y
 			&kp Q
 			&kp Z
 			&kp SEMI
			&kp LBKT
			&kp SQT
			&kp K
	 		&to 0

			&sl 5
 			&kp SPACE 
			&sl 3
			&sl 1
 			&sk LSHIFT
			&sl 7

		>;
	};




	
	// --------------------------------------
	// Layer 1 = 	  Zahlen	
	// --------------------------------------

	mac_zahlen
	{
		label = "MAC-NR";

		bindings = <

			&kp ESC	
			&kp LG(N1)
			&kp LG(N2)
			&kp LG(N3)
			&kp LG(N4)
			&kp LG(N5)
			&kp LG(N6)
			&kp LG(N7)
			&kp LG(N8)
			&kp LG(N9)
			&kp LG(N0)
			&kp BSPC

			&sl 9	
			&kp N1				
			&kp N2				
			&kp N3				
			&kp N4					
			&kp N5				
			&kp N6				
			&kp N7				
			&kp N8				
			&kp N9				
			&kp N0				
			&kp ENTER 

			&to 1
			&kp LS(N7)
			&kp LS(N8)
	 		&kp LS(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp X
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp SLASH		
			&to 0
	
			&sl 5
 			&kp SPACE 
			&sl 3
	 		&sl 2						
			&sl 20
			&sl 7

		>;		
	};






	// --------------------------------------
	// Layer 2 =	Sonderzeichen
	// --------------------------------------

	mac_sonderzeichen
	{
		label = "MAC";

		bindings = <

			&none
			&none
			&kp RA(N8)
			&kp RA(N9)
			&none
			&none
			&none
			&none
			&kp RA(N5)
			&kp RA(N6)
			&none
			&kp BSPC

			&none
			&kp LS(N6) 
			&kp GRAVE			
			&kp LS(GRAVE)
			&kp BACKSLASH 	
			&kp NUBS
			&kp LS(NUBS) 
			&kp LS(SLASH)
			&kp LS(N4) 
			&kp RA(M) 
			&kp LS(N3) 
			&none

			&to 1
			&kp RA(MINUS)
			&kp LS(N5)
			&kp LA(L)
			&kp RA(E)
			&kp LS(N2)
			&kp LS(BSLH)
			&kp LS(N1)
			&kp LS(COMMA)
			&kp LS(DOT)
			&kp UNDER
			&to 0
	
			&none 
			&none 
			&none 
			&trans 
			&none 
			&none

		>;
	};



	// --------------------------------------
	// Layer 3 =	Programme
	// --------------------------------------

	mac_programme
	{
		label = "MAC";

		bindings = <

			&kp LG(H)
			&kp LG(LC(N1))
			&kp LG(LC(N2))
			&kp LG(LC(N3))
			&kp LG(LC(N4))
			&kp LG(LC(N5))
			&kp LG(LC(N6))
			&kp LG(LC(N7))
			&kp LG(LC(N8))
			&kp LG(LC(N9))
			&kp LG(LC(N0))
			&kp LG(Q)

			&kp LG(LA(LC(LS(TAB))))
			&kp LG(LA(N1))
			&kp LG(LA(N2))
			&kp LG(LA(N3))
			&kp LG(LA(N4))
			&kp LG(LA(N5))
			&kp LG(LA(N6))
			&kp LG(LA(N7))
			&kp LG(LA(N8))
			&kp LG(LA(N9))
			&kp LG(LA(N0))
			&kp LG(TAB)

			&to 1
			&kp LG(LC(LA(F1)))
			&kp LG(LC(LA(F2)))
			&kp LG(LC(LA(F3)))
			&kp LG(LC(LA(F4)))
			&kp LG(LC(LA(F5)))
			&kp LG(LC(LA(F6)))
			&kp LG(LC(LA(F7)))
			&kp LG(LC(LA(F8)))
			&kp LG(LC(LA(F9)))
			&kp LG(LC(LA(N10)))
			&to 0
	
			&none 
			&none 
			&sl 4
			&none 
			&none 
			&none

		>;
	};




	// --------------------------------------
	// Layer 4 =	Shortcuts
	// --------------------------------------


	mac_shortcuts
	{

		label = "MAC";

		bindings = <

			&kp LG(LA(H))
			&kp LA(LG(J))
			&kp LA(LG(D))
			&kp LA(LG(U))
			&kp LA(LG(A))
			&kp LA(LG(X))
			&kp LA(LG(P))
			&kp LA(LG(H)) 
			&kp LA(LG(L)) 
			&kp LA(LG(M)) 
			&kp LA(LG(W)) 
			&kp LA(LG(ESC)) 
	
			&kp LG(LA(LC(LS(ESC))))
			&kp LA(LG(C))
			&kp LA(LG(T))
			&kp LA(LG(I))
			&kp LA(LG(E))
			&kp LA(LG(O))	
			&kp LA(LG(B))
			&kp LA(LG(N))
			&kp LA(LG(R))
			&kp LA(LG(S))
			&kp LA(LG(G)) 
			&kp LG(LS(TAB))

			&to 1
			&kp LA(LG(F))
			&kp LA(LG(V))
			&kp LA(LG(MINUS))
			&kp LA(LG(Y))
			&kp LA(LG(Q))
			&kp LA(LG(Z))
			&kp LA(LG(SEMICOLON))
			&kp LA(LG(LEFT_BRACKET))
			&kp LA(LG(SINGLE_QUOTE))
			&kp LA(LG(K)) 
			&to 0
	
			&none 
			&none
			&trans 
			&none
			&none
			&none

		>;
	};








};
};











                
                
                
                



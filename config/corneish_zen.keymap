#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define mCHAR 0
#define mNR 1
#define mSYM 2
#define mSSYM 3
#define mSSSYM 4
#define mPRG 5
#define mSPRG 6
#define mFUNC 7
#define mSFUNC 8
#define mGUI 9
#define mAGUI 10
#define mNAV 11

#define wCHAR 12
#define wNR 13
#define wSYM 14
#define wSSYM 15
#define wSSSYM 16
#define wPRG 17
#define wSPRG 18
#define wFUNC 19
#define wSFUNC 20
#define wCTL 21
#define wSCTL 22
#define wNAV 23

#define mwBCHAR 24


/ {
  
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
  
  behaviors {
    skq: sticky_key_quick_release {
      		compatible = "zmk,behavior-sticky-key";
      		label = "STICKY_KEY_QUICK_RELEASE";
      		#binding-cells = <1>;
      		bindings = <&kp>;
      		release-after-ms = <1000>;
    	    quick-release;
	    };
	};
  
  macros {
        swleft: SwitchLeft {
            label = "SwitchLeft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(LA(LC(LS(LEFT))))>
                ;
        };
    };

  	macros {
        swright: SwitchRight {
            label = "SwitchRight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to wCHAR>
                , <&kp LG(LA(LC(LS(RIGHT))))>
                ;
        };
    };

	macros {
        swcraft: SwitchCraft {
            label = "SwitchCraft";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N0)>
                ;
        };
    };


	macros {
        swrocket: SwitchRocket {
            label = "SwitchRocket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N7)>
                ;
        };
    };


	macros {
        swswyx: SwitchSwyx {
            label = "SwitchSwyx";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N9)>
                ;
        };
    };

		macros {
        swbrowser: SwitchBrowser {
            label = "SwitchBrowser";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp LG(N8)>
                ;
        };
    };

};

&skq {
        release-after-ms = <4000>;
        quick-release;    
		/delete-property/ ignore-modifiers;    
};


/ {

keymap
{
	compatible = "zmk,keymap";

	// --------------------------------------
	// Layer 0 - mChar = 	  Buchstaben	
	// --------------------------------------
	
	mac_buchstaben
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp J 
			&kp D	 
			&kp U
 			&kp A
	 		&kp X
	  		&kp P
 			&kp H
	 		&kp L
	 		&kp M
 			&kp W
 			&kp BSPC
 
			&sl mNAV
 			&kp C
 			&kp T
			&kp I
			&kp E
			&kp O
 			&kp B
			&kp N
 			&kp R
 			&kp S
 			&kp G
 			&kp RET
 
			&to mNR
			&kp F
	 		&kp V
 			&kp MINUS
 			&kp Y
 			&kp Q
 			&kp Z
 			&kp SEMI
			&kp LBKT
			&kp SQT
			&kp K
	 		&to mCHAR

			&sl mFUNC
 			&kp SPACE 
			&sl mPRG
			&sl mSYM
 			&skq LSHIFT
			&sl mGUI
		>;
	};


	// --------------------------------------
	// Layer 1 - mNR = 	  Zahlen	
	// --------------------------------------

	mac_zahlen
	{
		label = "MAC-NR";

		bindings = <

			&kp ESC	
			&none
			&none
			&none
			&none
			&kp X
			&none
			&none
			&none
			&kp M
			&none
			&kp BSPC

			&sl mNAV
			&kp N1				
			&kp N2				
			&kp N3				
			&kp N4					
			&kp N5				
			&kp N6				
			&kp N7				
			&kp N8				
			&kp N9				
			&kp N0				
			&kp ENTER 

			&to mNR
			&kp LS(N7)
			&kp LS(N8)
	 		&kp LS(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(N2)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp SLASH		
			&to mCHAR
	
			&sl mFUNC
 			&kp SPACE 
			&sl mPRG
	 		&sl mSYM						
			&sl mwBCHAR
			&sl mGUI
		>;		
	};



	// --------------------------------------
	// Layer 2 - mSYM =	Symoble
	// --------------------------------------

	mac_symbole
	{
		label = "MAC";

		bindings = <
			
			&kp ESC
			&kp LG(N1)
			&kp LG(N2)
			&kp LG(N3)
			&kp LG(N4)
			&kp LG(N5)
			&kp LG(N6)
			&kp LG(N7)
			&kp LG(N8)
			&kp LG(N9)
			&kp LG(N0)
			&kp BACKSPACE

			&trans
			&kp N1				
			&kp N2				
			&kp N3				
			&kp N4					
			&kp N5				
			&kp N6				
			&kp N7				
			&kp N8				
			&kp N9			
			&kp N0				
			&kp ENTER

			&to mNR
			&kp LS(N7)
			&kp LS(N8)
	 		&kp LS(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(N2)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp SLASH		
			&to mCHAR
	
			&none 
			&kp SPACE 
			&none 
			&sl mSSYM 
			&none 
			&none
		>;
	};



	// --------------------------------------
	// Layer 3 - mSSYM =	Special Symbole
	// --------------------------------------

	mac_specialsonderzeichen
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp LA(L)
			&kp LS(N4)
			&kp LA(N)
			&kp LS(GRAVE)
			&kp EQUAL
			&kp LA(N7)
			&kp LS(N1)
			&kp GRAVE
			&kp GRAVE
			&kp LS(MINUS)
			&kp LG(H)

			&trans
			&kp LS(N6)
			&kp NUBS
			&kp LS(NUBS) 
			&kp BACKSLASH 	
			&kp LS(N3)
			&kp RA(M)
			&kp RA(E)
			&kp LS(COMMA)
			&kp LS(DOT)
			&kp LS(N5)
			&kp LG(LA(LC(LS(F11))))	

			&to mNR
			&kp LS(N7)
			&kp LS(N8)
	 		&kp LS(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(N2)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp SLASH		
			&to mCHAR

			&none 
			&kp SPACE 
			&none 
			&sl mSSSYM
			&none
			&none
		>;
	};



	// --------------------------------------------
	// Layer 4 - mSSSYM =	Super Special Symbole
	// --------------------------------------------

	mac_superspecialsonderzeichen
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp LA(L)
			&kp LS(N4)
			&kp LA(N)
			&kp LS(GRAVE)
			&kp LS(EQUAL)
			&kp LA(N7)
			&kp LS(N1)
			&kp GRAVE
			&kp GRAVE
			&kp LS(MINUS)
			&kp LG(LA(H))

			&trans
			&kp LS(N6)
			&kp RA(N5)
			&kp RA(N6)
			&kp NUHS 	
			&kp LS(N3)
			&kp RA(M)
			&kp RA(E)
			&kp LS(COMMA)
			&kp LS(DOT)			
			&kp LS(N5)
			&kp LG(LA(LC(LS(F12))))	

			&to mNR
			&kp LS(LA(N7))
			&kp LA(N8)
	 		&kp LA(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(NUHS)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp LS(SLASH)
			&to mCHAR
	
			&none 
			&kp SPACE 
			&none 
			&trans
			&none
			&none			
		>;
	};	


	// --------------------------------------
	// Layer 5 - mPRG =	Programme
	// --------------------------------------

	mac_programme
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp LG(LC(N1))
			&kp LG(LC(N2))
			&kp LG(LC(N3))
			&kp LG(LC(N4))
			&kp LG(LC(N5))
			&kp LG(LC(N6))
			&kp LG(LC(N7))
			&kp LG(LC(N8))
			&kp LG(LC(N9))
			&kp LG(LC(N0))
			&kp LG(Q)

			&trans
			&kp LG(LA(N1))
			&kp LG(LA(N2))
			&kp LG(LA(N3))
			&kp LG(LA(N4))
			&kp LG(LA(N5))
			&kp LG(LA(N6))
			&kp LG(LA(N7))
			&kp LG(LA(N8))
			&kp LG(LA(N9))
			&kp LG(LA(N0))
			&kp LG(TAB)

			&to mNR
			&kp LG(LC(LA(F1)))
			&kp LG(LC(LA(F2)))
			&kp LG(LC(LA(F3)))
			&kp LG(LC(LA(F4)))
			&kp LG(LC(LA(F5)))
			&kp LG(LC(LA(F6)))
			&kp LG(LC(LA(F7)))
			&kp LG(LC(LA(F8)))
			&kp LG(LC(LA(F9)))
			&kp LG(LC(LA(F10)))
			&to mCHAR
	
			&none 
			&kp LG(LA(LC(LS(DOWN))))
			&sl mSPRG
			&swleft
			&kp LG(LA(LC(LS(TAB))))
			&swright
		>;
	};


	// --------------------------------------
	// Layer 6 -mSPRG =	Spezial Prgramm
	// --------------------------------------


	mac_sprogramme
	{

		label = "MAC";

		bindings = <

			&kp ESC
			&kp LS(LG(J))
			&kp LS(LG(D))
			&kp LS(LG(U))
			&kp LS(LG(A))
			&kp LS(LG(X))
			&kp LS(LG(P))
			&kp LS(LG(H)) 
			&kp LS(LG(L)) 
			&kp LS(LG(M)) 
			&kp LS(LG(W)) 
			&kp LG(LA(ESC)) // Sofort beenden
	
			&trans
			&kp LS(LG(C))
			&kp LS(LG(T))
			&kp LS(LG(I))
			&kp LS(LG(E))
			&kp LS(LG(O))	
			&kp LS(LG(B))
			&kp LS(LG(N))
			&kp LS(LG(R))
			&kp LS(LG(S))
			&kp LS(LG(G)) 
			&none

			&to mNR
			&kp LS(LG(F))
			&kp LS(LG(V))
			&kp LS(LG(MINUS))
			&kp LS(LG(Y))
			&kp LS(LG(Q))
			&kp LS(LG(Z))
			&kp LS(LG(SEMICOLON))
			&kp LS(LG(LEFT_BRACKET))
			&kp LS(LG(SINGLE_QUOTE))
			&kp LS(LG(K)) 
			&to mCHAR
	
			&none 
			&kp LG(LA(LC(LS(DOWN))))
			&trans
			&swleft
			&kp LG(LA(LC(LS(TAB))))
			&swright
		>;
	};



	// --------------------------------------
	// Layer 7 - mFUNC =	Funktionen
	// --------------------------------------

	mac_function
	{
		label = "MAC";

		bindings = <
 
			&kp ESC
			&kp LG(LS(B)) 
			&kp LG(U) 
			&kp LG(B) 
			&kp LG(I)
			&kp LG(LS(EQUAL)) 
			&kp LG(LC(SPACE))
			&kp LG(Y)
			&kp LG(LA(UP)) 
			&kp LG(LS(Y)) 
			&kp LG(RBKT)
			&kp LA(DELETE)
	
			&trans
			&kp LG(LS(G)) 
			&kp LG(LA(C)) 
			&kp LG(LA(V)) 
			&kp LG(SPACE)  
			&kp LG(LA(LC(LS(F2))))	
			&kp LG(LA(LC(LS(F3))))
			&kp LG(LA(LEFT)) 
			&kp LG(LA(DOWN)) 
			&kp LG(LA(RIGHT))  
			&kp LG(SLASH)
			&kp LG(LA(LC(LS(RBRC))))  // Fokus

			&to mNR
			&kp LG(LA(LC(LS(F1)))) //Seitenleiste links
			&kp LG(SEMI)
			&kp LG(SQT)
			&kp LG(LA(LC(LS(F4))))  // Shortcat
			&kp LG(LS(N4))       // Screenshot
			&kp LG(LC(Q))        // Sperren
			&kp LC(LS(TAB))
			&kp LG(UP)
			&kp LG(DOWN)
			&kp LC(TAB)
			&to mCHAR
			
			&sl mSFUNC
			&none
			&none
			&none 
			&none 
			&kp LG(LA(LC(LS(F5))))  //Shortcat
		>;
	};







	// --------------------------------------
	// Layer 8 - mSFUNC =	Spezial Funktionen
	// --------------------------------------

	mac_specialfunction
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&bt BT_PRV
			&kp C_PREVIOUS 
			&kp C_PP 
			&kp C_NEXT 
			&bt BT_CLR 	
			&bt BT_CLR 	
			&kp C_VOLUME_DOWN 
			&bt BT_SEL 0
			&kp C_VOLUME_UP 
			&bt BT_NXT
			&kp LG(DEL)

			&trans
			&kp LG(LA(LC(LS(C))))
			&kp LG(LA(LC(LS(T))))
			&kp LG(LA(LC(LS(I))))
			&kp LG(LA(LC(LS(E))))
			&kp LG(LA(LC(LS(O))))
			&kp LG(LA(LC(LS(B))))
			&kp LG(LA(LC(LS(N))))
			&kp LG(LA(LC(LS(R))))
			&kp LG(LA(LC(LS(S))))
			&kp LG(LA(LC(LS(G))))
			&kp LG(LA(LC(LS(SLASH))))

			&to mNR
			&kp LG(LA(LC(LS(F))))
			&kp LG(LA(LC(LS(V))))
			&kp LG(LA(LC(LS(MINUS))))
			&kp LG(LA(LC(LS(Y))))
			&kp LG(LA(LC(LS(Q))))
			&kp LG(LA(LC(LS(Z))))
			&kp LG(LA(LC(LS(SEMI))))
			&kp LG(LA(LC(LS(LBKT))))
			&kp LG(LA(LC(LS(SQT))))
			&kp LG(LA(LC(LS(K))))
			&to mCHAR
	
			&trans
			&none 
			&none 
			&none 
			&none 
			&none               
		>;
	};



	// --------------------------------------
	// Layer 9 - mGUI =	GUI
	// --------------------------------------

	mac_gui
	{
		label = "MAC";

		bindings = <

			&kp ESC
			&kp LG(J)
			&kp LG(D)
			&kp LG(U) 
			&kp LG(A)
			&kp LG(X)
			&kp LG(P)
			&kp LG(H)
			&kp LG(L) 
			&kp LG(M)
			&kp LG(W) 
			&kp LA(BACKSPACE)
	
			&trans
			&kp LG(C)
			&kp LG(T)
			&kp LG(I)
			&kp LG(E)
			&kp LG(O)	
			&kp LG(B)
			&kp LG(N)
			&kp LG(R)
			&kp LG(S)
			&kp LG(G)
			&kp LG(ENTER)

			&to mNR
			&kp LG(F)
			&kp LG(V)
			&kp LG(MINUS)
			&kp LG(Y)
			&kp LG(Q)
			&kp LG(Z)
			&kp LG(SEMICOLON)
			&kp LG(LEFT_BRACKET)
			&kp LG(SINGLE_QUOTE)
			&kp LG(K) 
			&to mCHAR
	
			&none 
			&none 
			&none 
			&none 
			&none 
			&sl mAGUI
		>;
	};



	// --------------------------------------
	// Layer 10 - mAGUI =	GUI ALT
	// --------------------------------------

	mac_guialt
	{	
		label = "MAC";

		bindings = <
		
			&kp ESC
			&kp LA(LG(J))
			&kp LA(LG(D))
			&kp LA(LG(U))
			&kp LA(LG(A))
			&kp LA(LG(X))
			&kp LA(LG(P))
			&kp LA(LG(H)) 
			&kp LA(LG(L)) 
			&kp LA(LG(M)) 
			&kp LA(LG(W)) 
			&kp LG(BACKSPACE)
	
			&trans
			&kp LA(LG(C))
			&kp LA(LG(T))
			&kp LA(LG(I))
			&kp LA(LG(E))
			&kp LA(LG(O))	
			&kp LA(LG(B))
			&kp LA(LG(N))
			&kp LA(LG(R))
			&kp LA(LG(S))
			&kp LA(LG(G)) 
			&kp LA(LG(ENTER))

			&to mNR
			&kp LA(LG(F))
			&kp LA(LG(V))
			&kp LA(LG(MINUS))
			&kp LA(LG(Y))
			&kp LA(LG(Q))
			&kp LA(LG(Z))
			&kp LA(LG(SEMICOLON))
			&kp LA(LG(LEFT_BRACKET))
			&kp LA(LG(SINGLE_QUOTE))
			&kp LA(LG(K)) 
			&to mCHAR

			&none 
			&none 
			&none 
			&none 
			&none 
			&trans
		>;
	};

                
              


   	// --------------------------------------
	// Layer = 11 - mNAV	  Navigation
	// --------------------------------------

	mac_navigation
	{		
		label = "MAC";

		bindings = <

			&kp ESC
			&kp LGUI
			&kp LG(LS(LEFT)) 
			&kp DEL
			&kp LG(LS(RIGHT)) 
            &kp LG(LA(LC(LS(F8))))
			&kp LG(UP)
			&kp LG(LEFT) 
			&kp UP
			&kp LG(RIGHT)
			&kp PG_UP 
			&kp DELETE

			&trans 
			&kp LSHIFT
			&kp LC(LGUI)
			&kp LALT
			&kp LGUI
			&kp LG(LA(LC(LS(F9))))
			&kp LG(DOWN) 
			&kp LEFT 
			&kp DOWN
			&kp RIGHT 	
			&kp PG_DN
			&kp ENTER
			
			&to mNR
			&kp CAPSLOCK
			&kp LS(LA(LEFT))
			&kp LS(LA(RIGHT))
			&kp LCTRL
			&kp LG(LA(LC(LS(F10))))
			&kp LG(LA(LC(LS(EQUAL))))
			&kp LS(TAB)
			&kp LA(LEFT)
			&kp LA(RIGHT)
			&kp TAB
			&to mCHAR

			&trans
			&kp SPACE 
			&trans
			&trans
			&kp LSHIFT 
			&trans
		>;
	};



// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------
	

	// --------------------------------------
	// Layer 12 - wCHAR = 	  Buchstaben	
	// --------------------------------------
	
	win_buchstaben
	{
		label = "WIN";

		bindings = <

			&kp ESC
			&kp J 
			&kp D	 
			&kp U
 			&kp A
	 		&kp X
	  		&kp P
 			&kp H
	 		&kp L
	 		&kp M
 			&kp W
 			&kp BSPC
 
			&sl wNAV
 			&kp C
 			&kp T
			&kp I
			&kp E
			&kp O
 			&kp B
			&kp N
 			&kp R
 			&kp S
 			&kp G
 			&kp RET
 
			&to wNR
			&kp F
	 		&kp V
 			&kp MINUS
 			&kp Y
 			&kp Q
 			&kp Z
 			&kp SEMI
			&kp LBKT
			&kp SQT
			&kp K
	 		&to wCHAR

			&sl wFUNC
 			&kp SPACE 
			&sl wPRG
			&sl wSYM
 			&skq LSHIFT
			&sl wCTL
		>;
	};




	
	// --------------------------------------
	// Layer 13 - wNR = 	  Zahlen	
	// --------------------------------------

	win_zahlen
	{
		label = "WIN-NR";

		bindings = <

			&kp ESC	
			&none
			&none
			&none
			&none
			&kp X
			&none
			&none
			&none
			&kp M
			&none
			&kp BSPC

			&sl wNAV		
			&kp N1				
			&kp N2				
			&kp N3				
			&kp N4					
			&kp N5				
			&kp N6				
			&kp N7				
			&kp N8				
			&kp N9				
			&kp N0				
			&kp ENTER 

			&to wNR
			&kp LS(N7)
			&kp LS(N8)
	 		&kp LS(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(N2)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp SLASH		
			&to wCHAR
	
			&sl wFUNC
 			&kp SPACE 
			&sl wPRG
	 		&sl wSYM						
			&sl mwBCHAR
			&sl wCTL
		>;		
	};




	// --------------------------------------
	// Layer 14 - wSYM =	Symbole
	// --------------------------------------

	win_symbole
	{
		label = "WIN";

		bindings = <

			&kp ESC
			&kp F1
			&kp F2
			&kp F3
			&kp F4
			&kp F5
			&kp F6
			&kp F7
			&kp F8
			&kp F9
			&kp F10
			&kp BACKSPACE

			&trans
			&kp N1				
			&kp N2				
			&kp N3				
			&kp N4					
			&kp N5				
			&kp N6				
			&kp N7				
			&kp N8				
			&kp N9				
			&kp N0				
			&kp ENTER

			&to wNR
			&kp LS(N7)
			&kp LS(N8)
	 		&kp LS(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(N2)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp SLASH		
			&to wCHAR
	
			&none 
			&kp SPACE 
			&none 
			&sl wSSYM 
			&none 
			&none
		>;
	};


	// --------------------------------------
	// Layer 15 - wSSYM =	Special Symbole
	// --------------------------------------

	win_specialsonderzeichen
	{
		label = "WIN";

		bindings = <

			&kp ESC
			&kp RA(Q)
			&kp LS(N4)
			&kp RA(RBKT)
			&kp LS(GRAVE)
			&kp EQUAL
			&kp RA(NUBS)
			&kp LS(N1)
			&kp RS(N2)
			&kp GRAVE
			&kp LS(MINUS)
			&kp LA(SPACE)

			&trans
			&kp LS(N6)
			&kp NUBS
			&kp LS(NUBS) 
			&kp BACKSLASH 	
			&kp LS(N3)
			&kp RA(M)
			&kp RA(E)
			&kp LS(COMMA)
			&kp LS(DOT)
			&kp LS(N5)
			&kp F11

			&to wNR
			&kp LS(N7)
			&kp LS(N8)
	 		&kp LS(N9)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(N2)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp SLASH		
			&to wCHAR
	
			&none 
			&kp SPACE 
			&none 
			&sl wSSSYM 
			&none
			&none
		>;
	};


	// --------------------------------------
	// Layer 16 - wSSSYM =	Super Special Symbole
	// --------------------------------------

	win_superpecialsonderzeichen
	{
		label = "WIN";

		bindings = <

			&kp ESC
			&kp RA(Q)
			&kp LS(N4)
			&kp RA(RBKT)
			&kp LS(GRAVE)
			&kp LS(EQUAL)
			&kp RA(NUBS)
			&kp LS(N1)
			&kp RA(N3)
			&kp GRAVE
			&kp LS(MINUS)
			&kp LG(D)

			&trans
			&kp LS(N6)
			&kp RA(N8)
			&kp RA(N9)
			&kp NUHS 	
			&kp LS(N3)
			&kp RA(M)
			&kp RA(E)
			&kp LS(COMMA)
			&kp LS(DOT)
			&kp LS(N5)
			&kp F12

			&to wNR
			&kp RA(MINUS)
			&kp RA(N7)
	 		&kp RA(N0)
			&kp LS(RBRC)
			&kp LS(N0)
			&kp LS(NUHS)
			&kp RBKT
			&kp COMMA
			&kp DOT
			&kp LS(SLASH)
			&to wCHAR
	
			&none 
			&kp SPACE 
			&none 
			&trans
			&none
			&none
		>;
	};



	// --------------------------------------
	// Layer 17 - wPRG =	Programme
	// --------------------------------------

	win_programme
	{
		label = "WIN";

		bindings = <

			&kp ESC
			&kp LC(N1)
			&kp LC(N2)
			&kp LC(N3)
			&kp LC(N4)
			&kp LC(N5)
			&kp LC(N6)
			&kp LC(N7)
			&kp LC(N8)
			&kp LC(N9)
			&kp LC(N0)
			&kp LA(F4)

			&trans
			&kp LG(N1)
			&kp LG(N2)
			&kp LG(N3)
			&kp LG(N4)
			&kp LG(N5)
			&kp LG(N6)
			&swrocket
			&swbrowser
			&swswyx
			&swcraft 			
			&kp LA(TAB)

			&to wNR
			&none
			&none
			&none
			&none
			&none
			&none
			&none
			&none
			&none
			&none
			&to wCHAR
	
			&none 
			&kp LG(LA(LC(LS(DOWN))))
			&sl wSPRG
			&swleft
			&kp LG(TAB)
			&swright
		>;
	};




	// --------------------------------------
	// Layer 18 - wSPRG =	Spezial Prgramme
	// --------------------------------------

	win_sprogramme
	{

		label = "WIN";

		bindings = <

			&kp ESC
			&kp LA(J) 
			&kp LA(D)
			&kp LA(U) 
			&kp LA(A) 
			&kp LA(X)
			&kp LA(P) 
			&kp LA(H) 
			&kp LA(L) 
			&kp LA(M) 
			&kp LA(W) 
			&to LC(LS(ESC))
	
			&trans
			&kp LA(C)
			&kp LA(T)
			&kp LA(I)
			&kp LA(E)
			&kp LA(O)	
			&kp LA(B) 
			&kp LA(N) 
			&kp LA(R) 
			&kp LA(S) 
			&kp LA(G) 
			&none

			&to wNR
			&kp LA(F)
			&kp LA(V)
			&kp LA(MINUS)
			&kp LA(Y)
			&kp LA(Q)
			&kp LA(Z)
			&kp LA(SEMICOLON)
			&kp LA(LEFT_BRACKET)
			&kp LA(SINGLE_QUOTE)
			&kp LA(K) 
			&to wCHAR
	
			&none 
			&kp LG(LA(LC(LS(DOWN))))
			&trans 
			&swleft
			&kp LG(TAB)
			&swright
		>;
	};





	// --------------------------------------
	// Layer 19 - wFUNC =	Funktionen
	// --------------------------------------

	win_function
	{
		label = "WIN";

		bindings = <
 
			&kp ESC
			&kp LC(LS(B)) 
			&kp LC(LS(U)) 
			&kp LC(LS(F)) 
			&kp LC(LS(K))
			&kp LC(LS(SINGLE_QUOTE))
			&kp LG(DOT)
			&kp LC(Y)
			&kp LA(UP) 
			&kp LC(Z) 
			&kp LC(KP_PLUS)
			&kp LC(DELETE)
	
			&trans
			&kp LA(E) 
			&kp LC(LS(C)) 
			&kp LC(LS(V)) 
			&kp LG(S)  
			&kp LC(LS(Y))
			&kp LC(LS(Z))
			&kp LC(LEFT) 
			&kp LA(DOWN) 
			&kp LC(RIGHT)  
			&kp LC(KP_MINUS)
			&kp LC(NUHS)     //Fokus

			&to wNR
			&kp F12			//Seitenleiste links
			&kp LA(LEFT) 
			&kp LA(RIGHT)
			&kp LG(A)		// Seitenleiste rechts
			&kp LS(LG(S))
			&kp LG(X)       //Sperren, shutdown
			&kp LC(LS(TAB))
			&kp LA(UP)
			&kp ENTER
			&kp LC(TAB)
			&to wCHAR
	
			&sl wSFUNC
			&none
			&none
			&none 
			&none 
			&kp LALT	   //Shortcat alternative
		>;
	};


	// --------------------------------------
	// Layer 20 - wSFUNC =	Spezial Funktionen
	// --------------------------------------

	win_specialfunction
	{
		label = "WIN";

		bindings = <

			&kp ESC
			&bt BT_PRV
			&kp C_PREVIOUS 
			&kp C_PP 
			&kp C_NEXT 
			&bt BT_CLR 	
			&bt BT_CLR 	
			&kp C_VOLUME_DOWN 
			&bt BT_SEL 0
			&kp C_VOLUME_UP 
			&bt BT_NXT			
			&kp LS(END)

			&trans
			&none
			&none
			&none
			&none
			&none
			&none
			&kp T
			&kp E
			&kp S
			&kp T
			&none

			&to wNR
			&none
			&none
			&none
			&none
			&none
			&none
			&none
			&none
			&none
			&none
			&to wCHAR

			&trans
			&none 
			&none 
			&none 
			&none 
			&none                   

		>;
	};


	// --------------------------------------
	// Layer 21 - wCTL =	CTL 
	// --------------------------------------

	win_ctl
	{
		label = "WIN";

		bindings = <

			&kp ESC
			&kp LC(J)
			&kp LC(D)
			&kp LC(U) 
			&kp LC(A)
			&kp LC(X)
			&kp LC(P)
			&kp LC(H)
			&kp LC(L) 
			&kp LC(M)
			&kp LC(W) 
			&kp LC(BACKSPACE)
	
			&trans
			&kp LC(C)
			&kp LC(T)
			&kp LC(I)
			&kp LC(E)
			&kp LC(O)	
			&kp LC(B)
			&kp LC(N)
			&kp LC(R)
			&kp LC(S)
			&kp LC(G)
			&kp LC(ENTER)

			&to wNR
			&kp LC(F)
			&kp LC(V)
			&kp LC(MINUS)
			&kp LC(Y)
			&kp LC(Q)
			&kp LC(Z)
			&kp LC(SEMICOLON)
			&kp LC(LEFT_BRACKET)
			&kp LC(SINGLE_QUOTE)
			&kp LC(K) 
			&to wCHAR
	
			&none 
			&none 
			&none 
			&none 
			&none 
			&sl wSCTL

		>;
	};




	// --------------------------------------
	// Layer 22 - wSCTL =	sCTL
	// --------------------------------------

	win_sctl	
	{	
		label = "WIN";

		bindings = <

			&kp ESC
			&kp LC(LS(J))
			&kp LC(LS(D))
			&kp LC(LS(U))
			&kp LC(LS(A))
			&kp LC(LS(X))
			&kp LC(LS(P))
			&kp LC(LS(H))
			&kp LC(LS(L))
			&kp LC(LS(M))
			&kp LC(LS(W)) 
			&kp LS(HOME)
	
			&trans
			&kp LC(LS(C))
			&kp LC(LS(T))
			&kp LC(LS(I))
			&kp LC(LS(E))
			&kp LC(LS(O))	
			&kp LC(LS(B))
			&kp LC(LS(N))
			&kp LC(LS(R))
			&kp LC(LS(S))
			&kp LC(LS(G))
			&kp LC(LS(ENTER))

			&to wNR
			&kp LC(LS(F))
			&kp LC(LS(V))
			&kp LC(LS(MINUS))
			&kp LC(LS(Y))
			&kp LC(LS(Q))
			&kp LC(LS(Z))
			&kp LC(LS(SEMICOLON))
			&kp LC(LS(LEFT_BRACKET))
			&kp LC(LS(SINGLE_QUOTE))
			&kp LC(LS(K))
			&to wCHAR

			&none 
			&none 
			&none 
			&none 
			&none 
			&trans

		>;
	};


                
    // --------------------------------------
	// Layer 23 - wNAV = 	  Navigation
	// --------------------------------------

	win_navigation
	{		
		label = "WIN";

		bindings = <

			&kp ESC
			&kp LALT
			&kp LS(HOME) 
			&kp DEL
			&kp LS(END) 
           	&kp LG(T)
			&kp LC(HOME)
			&kp HOME 
			&kp UP
			&kp END
			&kp PG_UP 
			&kp DELETE

			&trans 
			&kp LSHIFT
			&kp LGUI
			&kp LALT
			&kp LCTRL
			&none
			&kp LC(END)
			&kp LEFT 
			&kp DOWN
			&kp RIGHT 	
			&kp PG_DN
			&kp ENTER

			&to wNR
			&kp CAPSLOCK
			&kp LC(LS(LEFT))
			&kp LC(LS(RIGHT))
			&kp INSERT
			&none
			&kp LC(LS(F10))
			&kp LS(TAB)
			&kp LC(LEFT)
			&kp LC(RIGHT)
			&kp TAB
			&to wCHAR

			&trans
			&kp SPACE 
			&trans
			&trans
			&kp LSHIFT 
			&trans

		 >;
	};


	// ------------------------------------------------------------------------------------------------------------------
	// ------------------------------------------------------------------------------------------------------------------


	// --------------------------------------
	// Layer 24 - mwBCHAR =	GROß-BUCHSTABEN
	// --------------------------------------


	macwin_character
	{

		label = "BOTH";

		bindings = <

			&kp ESC
			&kp LS(J) 
			&kp LS(D)
			&kp LS(U) 
			&kp LS(A) 
			&kp LS(X)
			&kp LS(P) 
			&kp LS(H) 
			&kp LS(L) 
			&kp LS(M) 
			&kp LS(W) 
			&kp BACKSPACE
	
			&trans
			&kp LS(C)
			&kp LS(T)
			&kp LS(I)
			&kp LS(E)
			&kp LS(O)	
			&kp LS(B) 
			&kp LS(N) 
			&kp LS(R) 
			&kp LS(S) 
			&kp LS(G) 
			&kp ENTER
			
			&trans
			&kp LS(F)
			&kp LS(V)
			&kp LS(MINUS)
			&kp LS(Y)
			&kp LS(Q)
			&kp LS(Z)
			&kp LS(SEMICOLON)
			&kp LS(LEFT_BRACKET)
			&kp LS(SINGLE_QUOTE)
			&kp LS(K) 
			&trans
	
			&trans 
			&kp SPACE
			&trans 
			&trans 
			&trans 
			&trans 
		>;
	};
};
};

                
                


